# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Demerzel Solutions Limited
# This file is distributed under the same license as the nethermind package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Anna Szeszula <annaszeszula@icloud.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nethermind\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-14 17:16+0100\n"
"PO-Revision-Date: 2020-05-15 17:46+0000\n"
"Last-Translator: Anna Szeszula <annaszeszula@icloud.com>, 2020\n"
"Language-Team: Chinese (China) (https://www.transifex.com/nethermind/teams/110027/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/enterprise.rst:2
msgid "Enterprise"
msgstr "企业"

#: ../../source/enterprise.rst:4
msgid ""
"Nethermind supports clients through monitoring their Ethereum Nodes with a "
"nice and handy tools such as ``Grafana`` or ``Seq``."
msgstr "Nethermind通过使用像``Grafana''或``Seq''便捷的工具，来监控客户端的以太坊节点，从而为客户提供支持。"

#: ../../source/enterprise.rst:7
msgid "Seq"
msgstr "Seq"

#: ../../source/enterprise.rst:9
msgid ""
"With `Seq <https://datalust.co/seq>`_  you can quickly identify and diagnose"
" problems with your Nethermind nodes. You can setup dashboards to monitor "
"node's behaviour and also send alerts whenever critical errors occur. With "
"the help of NLog logging the application logs are being sent over to a Seq "
"instance to enable monitoring. You can easily search through the events by "
"simply writing SQL queries."
msgstr ""
"使用`Seq "
"<https://datalust.co/seq>`_，您可以快速识别和诊断Nethermind节点的问题。设置仪表板以监视节点的行为，并在发生严重错误时发送警报。借助NLog日志记录，将应用程序日志发送到Seq实例以启用监视。只要编写SQL查询即可轻松搜索事件。"

#: ../../source/enterprise.rst:11
msgid ""
"Clients can entrust monitoring and support of the nodes to us or configure "
"their own dashboard and Seq tools. Nethermind team can use Seq dashboards "
"and alerts to quickly address any production issues and outages."
msgstr ""
"客户可以将对节点的监视和支持委托给我们，或者配置自己的仪表板和Seq工具。 "
"Nethermind团队可以使用Seq仪表板和警报来快速解决任何生产问题和停机。"

#: ../../source/enterprise.rst:14
msgid "Dashboards and Alerts"
msgstr "仪表板与警报"

#: ../../source/enterprise.rst:16
msgid ""
"In Seq we are able to visualize events data with simple charts. They're very"
" useful when it comes to alert the Team when something wrong happens with "
"nodes."
msgstr "在Seq中，我们能够使用简单的图表可视化事件数据。当节点发生错误时提醒团队时，这些图表非常有用。"

#: ../../source/enterprise.rst:20
msgid ""
"The Alert is set up to trigger when the Validator node stops sealing blocks "
"in a specified measurement window."
msgstr "当“验证器”断停止指定测量窗口中的密封块时，警报触发。"

#: ../../source/enterprise.rst:24
msgid ""
"The Alert is being sent to our `OpsGenie "
"<https://www.atlassian.com/software/opsgenie>`_ instance over the SMTP "
"server configured via one of the Apps which are plug-ins that process events"
" and alerts, or ingest events from an external source. There are many of "
"them created and provided by the community. In our example we use an "
"``Email+`` 2.0.92 provided by Datalust and Contributors."
msgstr ""
"该警报将发送到我们的 `OpsGenie <https://www.atlassian.com/software/opsgenie>`_ "
"通过一个应用程序配置的SMTP服务器上的实例，这些应用程序是处理事件和警报或从外部源获取事件的插件，其中有许多是由社区创建和提供的。在我们的示例中，我们使用Datalust和Contributors提供的``Email"
" +''2.0.92。"

#: ../../source/enterprise.rst:29
msgid ""
"When the alert reaches the OpsGenie, phone notfications are being sent to "
"our on-call Teams."
msgstr "警报到达OpsGenie时，电话通知将发送给我们的待命团队。"

#: ../../source/enterprise.rst:33
msgid ""
"We can also view them in a nice HTML format which can be also configured in "
"Seq."
msgstr "我们还可以在Seq中对其进行配置，使用HTML格式查看这些警报。"

#: ../../source/enterprise.rst:38
msgid "Logs"
msgstr "日志"

#: ../../source/enterprise.rst:40
msgid ""
"With the power of structured logging we can quickly check the source of an "
"event. It's useful when diagnosing problems with Ethereum nodes, we can "
"verify the source of an error in a second. It is very easy to create some "
"handy filters and queries which can be reused."
msgstr ""
"借助结构化日志功能，我们可以快速检查事件的来源。在诊断以太坊节点问题时非常有用，让我们在一秒钟内，验证错误的来源。建立一些方便的过滤器，或者可重复使用的查询，非常容易。"

#: ../../source/enterprise.rst:46
msgid "SQL queries"
msgstr "SQL查询"

#: ../../source/enterprise.rst:48
msgid ""
"The most popular database query language can be used to query over "
"application logs."
msgstr "最常见的数据库查询语言可用于查询应用程序日志。"
