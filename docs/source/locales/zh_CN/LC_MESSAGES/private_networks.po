# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Demerzel Solutions Limited
# This file is distributed under the same license as the nethermind package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nethermind \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-14 17:16+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/private_networks.rst:2
msgid "Private Networks"
msgstr ""

#: ../../source/private_networks.rst:4
msgid ""
"It is possible to configure a private network (private blockchain) using "
"Nethermind nodes. Before you setup a private network you will need to "
"make a few decisions. One of them is choosing a consensus protocol that "
"will be used for securing the network."
msgstr ""

#: ../../source/private_networks.rst:7
msgid "Consensus Algorithms"
msgstr ""

#: ../../source/private_networks.rst:9
msgid "Nethermind supports the following consensus algorithms:"
msgstr ""

#: ../../source/private_networks.rst:11
msgid "ethash (PoW)"
msgstr ""

#: ../../source/private_networks.rst:12
msgid "AuRa (PoA)"
msgstr ""

#: ../../source/private_networks.rst:13
msgid "Clique (PoA)"
msgstr ""

#: ../../source/private_networks.rst:14
msgid "NethDev (debug / dev)"
msgstr ""

#: ../../source/private_networks.rst:17
msgid "PoW"
msgstr ""

#: ../../source/private_networks.rst:19
msgid ""
"In the proof of work consensus algorithm some of the nodes participate in"
" a race to mine a new block by solving a mathematical puzzle. The "
"difficulty of the puzzle (the amount of computation needed to find a "
"solution) is adjusted so as to make blocks appear with some average "
"frequency (every 15 seconds on the Ethereum mainnet). PoW is currently "
"used to secure the public Ethereum mainnet and the Ropsten testnet. The "
"only mining algorithm used for PoW in Ethereum is called ethash and is "
"designed to be strict memory hard (see `Strict Memory Hard Hashing "
"Functions <http://www.hashcash.org/papers/memohash.pdf>`_)."
msgstr ""

#: ../../source/private_networks.rst:22
msgid "Clique"
msgstr ""

#: ../../source/private_networks.rst:24
msgid ""
"Clique is an implementation of the Proof of Authority (PoA) consensus "
"algorithm. The idea behind PoA is to choose a group of nodes within the "
"network with authority to create (seal) new blocks. In Clique such nodes "
"are called signers and after the initial setup signers can vote to add "
"new signers to the group or to remove any of the existing signers. Clique"
" is currently supported by Geth, Parity, Nethermind and Pantheon and is "
"used to secure the Goerli and Rinkeby testnets."
msgstr ""

#: ../../source/private_networks.rst:27
msgid "AuRa"
msgstr ""

#: ../../source/private_networks.rst:29
msgid ""
"AuRa is another implementation of the Proof of Authority consensus "
"algorithm. It is currently only supported by Nethermind and Parity "
"Ethereum client. Aura is used to secure the Kovan testnet and the POA "
"Network."
msgstr ""

#: ../../source/private_networks.rst:32
msgid "NethDev (we also call it Spaceneth)"
msgstr ""

#: ../../source/private_networks.rst:34
msgid ""
"NethDev is a very simple consensus algorithm (or to better describe it - "
"lack of consensus algorithm). NethDev can be used for setting up nodes "
"for development and testing purposes. On the NethDev network any node can"
" create a block with transactions and as long as it is a valid Ethereum "
"block all other nodes will accept it."
msgstr ""

#: ../../source/private_networks.rst:37
msgid "Configuration"
msgstr ""

#: ../../source/private_networks.rst:39
msgid ""
"Nethermind uses the same format chainspec files that can be used for "
"setting up private networks in Parity. Most of the elements of the "
"chainspec files are supported by Nethermind:"
msgstr ""

#: ../../source/private_networks.rst:41
msgid ""
"consensus engine and its parameters (to choose between Ethash, Clique, "
"AuRa or NethDev)"
msgstr ""

#: ../../source/private_networks.rst:42
msgid "genesis block spec"
msgstr ""

#: ../../source/private_networks.rst:43
msgid "EIP transitions"
msgstr ""

#: ../../source/private_networks.rst:44
msgid "initial account allocations"
msgstr ""

#: ../../source/private_networks.rst:45
msgid "bootnodes"
msgstr ""

#: ../../source/private_networks.rst:47
msgid "The following elements are NOT supported at the moment:"
msgstr ""

#: ../../source/private_networks.rst:49
msgid "hardcoded sync block hashes"
msgstr ""

#: ../../source/private_networks.rst:50
msgid "precompile definitions and precompile activation blocks"
msgstr ""

#: ../../source/private_networks.rst:52
msgid ""
"You can find below links to some of the chainspec files used to define "
"various Ethereum networks:"
msgstr ""

#: ../../source/private_networks.rst:54
msgid ""
"`foundation "
"<https://github.com/NethermindEth/nethermind/blob/09389fc28b37605acc5eaed764d3e973969fe319/src/Nethermind/Chains/foundation.json>`_"
" - the public Ethereum mainnet"
msgstr ""

#: ../../source/private_networks.rst:55
msgid ""
"`rinkeby "
"<https://github.com/NethermindEth/nethermind/blob/09389fc28b37605acc5eaed764d3e973969fe319/src/Nethermind/Chains/rinkeby.json>`_"
" - the original Clique based testnet"
msgstr ""

#: ../../source/private_networks.rst:56
msgid ""
"`goerli "
"<https://github.com/NethermindEth/nethermind/blob/09389fc28b37605acc5eaed764d3e973969fe319/src/Nethermind/Chains/goerli.json>`_"
" - the new Clique based testnet"
msgstr ""

#: ../../source/private_networks.rst:57
msgid ""
"`spaceneth "
"<https://github.com/NethermindEth/nethermind/blob/09389fc28b37605acc5eaed764d3e973969fe319/src/Nethermind/Chains/spaceneth.json>`_"
" - a private network example with NethDev"
msgstr ""

#: ../../source/private_networks.rst:60
msgid "How to setup a Nethermind only Clique based chain"
msgstr ""

#: ../../source/private_networks.rst:63 ../../source/private_networks.rst:310
#: ../../source/private_networks.rst:550
msgid "Prerequisites"
msgstr ""

#: ../../source/private_networks.rst:64 ../../source/private_networks.rst:311
#: ../../source/private_networks.rst:551
msgid "Linux bash shell"
msgstr ""

#: ../../source/private_networks.rst:65 ../../source/private_networks.rst:312
#: ../../source/private_networks.rst:552
msgid "Docker-compose"
msgstr ""

#: ../../source/private_networks.rst:66 ../../source/private_networks.rst:313
#: ../../source/private_networks.rst:553
msgid "Docker"
msgstr ""

#: ../../source/private_networks.rst:67 ../../source/private_networks.rst:314
msgid "jq"
msgstr ""

#: ../../source/private_networks.rst:74 ../../source/private_networks.rst:324
#: ../../source/private_networks.rst:560
msgid "Setup"
msgstr ""

#: ../../source/private_networks.rst:76
msgid ""
"In this setup we will create a private network of 3 Nethermind nodes "
"running Clique consensus algorithm."
msgstr ""

#: ../../source/private_networks.rst:78 ../../source/private_networks.rst:328
#: ../../source/private_networks.rst:564
msgid "create separate directory where we will store all files"
msgstr ""

#: ../../source/private_networks.rst:85 ../../source/private_networks.rst:335
#: ../../source/private_networks.rst:571
msgid "create folders for each node and genesis"
msgstr ""

#: ../../source/private_networks.rst:91
msgid ""
"download `chainspec "
"<https://raw.githubusercontent.com/NethermindEth/nethermind/09389fc28b37605acc5eaed764d3e973969fe319/src/Nethermind/Chains/goerli.json>`_"
" file with clique engine and place it in ``genesis`` folder (we will be "
"using goerli chainspec in this example)"
msgstr ""

#: ../../source/private_networks.rst:98 ../../source/private_networks.rst:348
#: ../../source/private_networks.rst:584
msgid "create subfolders in each node folder"
msgstr ""

#: ../../source/private_networks.rst:104 ../../source/private_networks.rst:354
#: ../../source/private_networks.rst:590
msgid ""
"create a ``static-nodes.json`` file and place it in node_1/staticNodes "
"subfolders (do this for node_2 and node_3 as well)"
msgstr ""

#: ../../source/private_networks.rst:114 ../../source/private_networks.rst:364
#: ../../source/private_networks.rst:600
msgid ""
"create ``config.cfg`` file and place it in ``node_1/configs`` subfolders "
"(do this for node_2 and node_3 as well)"
msgstr ""

#: ../../source/private_networks.rst:147 ../../source/private_networks.rst:394
#: ../../source/private_networks.rst:637
msgid "For each node you will need to change following items in configuration:"
msgstr ""

#: ../../source/private_networks.rst:149
msgid ""
"``TestNodeKey`` should be a 64 character length alphanumeric string. Can "
"be generate with ``pwgen`` tool for example."
msgstr ""

#: ../../source/private_networks.rst:150 ../../source/private_networks.rst:396
#: ../../source/private_networks.rst:639
msgid ""
"``LocalIp``, ``ExternalIp`` and ``Host`` should have the same value and "
"be incremented for each node e.g. 10.5.0.3, 10.5.0.4 and so on and so "
"forth."
msgstr ""

#: ../../source/private_networks.rst:154 ../../source/private_networks.rst:400
#: ../../source/private_networks.rst:643
msgid "copy ``docker-compose`` file and place it in working directory"
msgstr ""

#: ../../source/private_networks.rst:213 ../../source/private_networks.rst:702
msgid ""
"run each node separately so that we can copy ``Enode`` and ``Node "
"address`` for each node, we will use them later"
msgstr ""

#: ../../source/private_networks.rst:219
msgid ""
"Stop the node when Nethermind initialization completes ``Ctrl +C``. Copy "
"``This node`` and ``Node address`` (without 0x prefixes) values to a text"
" file. Continue with node_2 and node_3."
msgstr ""

#: ../../source/private_networks.rst:225 ../../source/private_networks.rst:471
#: ../../source/private_networks.rst:714
msgid "Tip:"
msgstr ""

#: ../../source/private_networks.rst:227 ../../source/private_networks.rst:473
#: ../../source/private_networks.rst:716
msgid ""
"You can use ``Nethermind.Cli`` to fetch these values from nodes by "
"executing the following:"
msgstr ""

#: ../../source/private_networks.rst:235 ../../source/private_networks.rst:321
msgid ""
"``Nethermind.Cli`` can be found in packages on `Github Releases "
"<https://github.com/NethermindEth/nethermind/releases>`_ or `Download "
"Page <http://downloads.nethermind.io/>`_."
msgstr ""

#: ../../source/private_networks.rst:237 ../../source/private_networks.rst:480
#: ../../source/private_networks.rst:724
msgid "the file should look similar to this:"
msgstr ""

#: ../../source/private_networks.rst:248
msgid ""
"copy & paste above variables into your terminal and create "
"``EXTRA_VANITY`` and ``EXTRA_SEAL`` variables"
msgstr ""

#: ../../source/private_networks.rst:256
msgid ""
"create ``EXTRA_DATA`` variable accordingly to "
"https://eips.ethereum.org/EIPS/eip-225"
msgstr ""

#: ../../source/private_networks.rst:264
msgid ""
"in ``goerli.json`` chainspec file, modify ``extraData`` property in "
"``genesis`` field"
msgstr ""

#: ../../source/private_networks.rst:266
msgid "You can do this either manually or using below command"
msgstr ""

#: ../../source/private_networks.rst:273 ../../source/private_networks.rst:490
#: ../../source/private_networks.rst:737
msgid ""
"for each node modify previously created empty ``static-nodes.json`` files"
" by appending ``Enodes`` to them"
msgstr ""

#: ../../source/private_networks.rst:287 ../../source/private_networks.rst:504
#: ../../source/private_networks.rst:766
msgid "remove databases for each node"
msgstr ""

#: ../../source/private_networks.rst:293
msgid "finally run ``docker-compose`` file"
msgstr ""

#: ../../source/private_networks.rst:299
msgid ""
"You should see the private network working and nodes sealing blocks in "
"Clique consensus algorithm."
msgstr ""

#: ../../source/private_networks.rst:304
msgid "How to setup a Nethermind only Spaceneth based chain"
msgstr ""

#: ../../source/private_networks.rst:306
msgid ""
"Spaceneth private network setup looks very similar to the above Clique "
"setup. However, there are few major differences and will be described "
"below."
msgstr ""

#: ../../source/private_networks.rst:315
msgid "Nethermind.Cli"
msgstr ""

#: ../../source/private_networks.rst:326
msgid ""
"In this setup we will create a private network of 3 Nethermind nodes "
"running a simple testing NethDev consensus algorithm."
msgstr ""

#: ../../source/private_networks.rst:341
msgid ""
"download `chainspec "
"<https://raw.githubusercontent.com/NethermindEth/nethermind/master/src/Nethermind/Chains/spaceneth.json>`_"
" file with clique engine and place it in ``genesis`` folder."
msgstr ""

#: ../../source/private_networks.rst:459
msgid ""
"run each node separately so that we can copy ``Enode`` for each node, we "
"will use them later"
msgstr ""

#: ../../source/private_networks.rst:465
msgid ""
"Stop the node when Nethermind initialization completes ``Ctrl +C``. Copy "
"``This node`` values to a text file. Continue with node_2 and node_3."
msgstr ""

#: ../../source/private_networks.rst:488 ../../source/private_networks.rst:735
msgid "copy & paste above variables into your terminal"
msgstr ""

#: ../../source/private_networks.rst:510 ../../source/private_networks.rst:772
msgid "run ``docker-compose`` file"
msgstr ""

#: ../../source/private_networks.rst:516
msgid ""
"You should see the private network working. We now need to send "
"transactions in order to start producing blocks."
msgstr ""

#: ../../source/private_networks.rst:518
msgid "run ``Nethermind.Cli``"
msgstr ""

#: ../../source/private_networks.rst:520
msgid "run ``node.switch(\"http://localhost:8547\")``"
msgstr ""

#: ../../source/private_networks.rst:522
msgid "run ``personal.listAccounts``"
msgstr ""

#: ../../source/private_networks.rst:524
msgid "create new account ``personal.newAccount(\"test\")``"
msgstr ""

#: ../../source/private_networks.rst:528
msgid "re-run ``personal.listAccounts`` and copy your account address"
msgstr ""

#: ../../source/private_networks.rst:530
msgid ""
"19. trigger blocks producing by sending transaction using "
"``eth_sendTransaction`` JSON RPC method. For example using ``curl``. "
"Change ``from`` property to your account address"
msgstr ""

#: ../../source/private_networks.rst:547
msgid "How to setup a Nethermind only AuRa based chain"
msgstr ""

#: ../../source/private_networks.rst:562
msgid ""
"In this setup we will create a private network of 3 Nethermind nodes "
"running a simple testing AuRa, an implementation of the Proof of "
"Authority consensus algorithm."
msgstr ""

#: ../../source/private_networks.rst:577
msgid ""
"download `chainspec "
"<https://raw.githubusercontent.com/NethermindEth/nethermind/master/src/Nethermind/Chains/AuRaTest.json>`_"
" file with clique engine and place it in ``genesis`` folder."
msgstr ""

#: ../../source/private_networks.rst:708
msgid ""
"Stop the node when Nethermind initialization completes ``Ctrl +C``. Copy "
"``This node`` and ``Node address`` values to a text file. Continue with "
"node_2 and node_3."
msgstr ""

#: ../../source/private_networks.rst:751
msgid ""
"open ``genesis/AuraTest.json`` file and add previously saved ``Node "
"addresses`` to validators list, leave stage 0 only"
msgstr ""

#: ../../source/private_networks.rst:762
msgid "The file should then look like this:"
msgstr ""

#: ../../source/private_networks.rst:778
msgid "You should see the private network working, producing and sealing blocks."
msgstr ""

