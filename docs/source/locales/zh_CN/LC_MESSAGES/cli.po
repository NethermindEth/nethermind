# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Demerzel Solutions Limited
# This file is distributed under the same license as the nethermind package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Anna Szeszula <annaszeszula@icloud.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nethermind\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-14 17:16+0100\n"
"PO-Revision-Date: 2020-05-15 17:44+0000\n"
"Last-Translator: Anna Szeszula <annaszeszula@icloud.com>, 2020\n"
"Language-Team: Chinese (China) (https://www.transifex.com/nethermind/teams/110027/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/cli.rst:2
msgid "CLI"
msgstr "CLI"

#: ../../source/cli.rst:4
msgid ""
"After launching ./Nethermind.Launcher you have two options - Node and CLI. "
"If you launch the Node (you have to ensure that the JsonRpc.Enabled is set "
"to true either by enabling it when Launcher asks about it or by manually "
"editing the relevant config file or by passing --JsonRpc.Enabled true "
"parameter after the Launcher command) in one process and then launch the CLI"
" in another process you will see available commands inside the CLI."
msgstr ""
"启动./Nethermind.Launcher之后，有两种选项-Node和CLI。 如果在一个进程中启动节点， "
"（启动节点必须通过在启动器询问时启用JsonRpc.Enabled，或通过手动编辑相关配置文件，或在启动器命令后传递--JsonRpc.Enabled "
"true参数 来确保将JsonRpc.Enabled设置为true）然后在另一进程中启动CLI，将在CLI内可以看到可用的命令。"

#: ../../source/cli.rst:8
msgid ""
"CLI will display available options (functions and properties) when started."
msgstr "CLI在启动时将显示可用选项（功能和属性）。"

#: ../../source/cli.rst:13
msgid ""
"CLI will allow you to query the most basic info about the node quickly."
msgstr "CLI将允许您快速查询有关该节点的最基本信息。您可以："

#: ../../source/cli.rst:15
msgid "You can execute javascript arithmetics"
msgstr "执行JavaScript算法"

#: ../../source/cli.rst:16
msgid "You can issue JSON RPC requests to the node"
msgstr "向节点发出JSON RPC请求"

#: ../../source/cli.rst:17
msgid "You can combine the former two"
msgstr "或者结合前两点"

#: ../../source/cli.rst:18
msgid "You can create and call functions"
msgstr "创建与调用函数"

#: ../../source/cli.rst:19
msgid "You can retrieve node objects"
msgstr "检索节点对象"

#: ../../source/cli.rst:20
msgid "And work with node object properties"
msgstr "使用节点对象属性"

#: ../../source/cli.rst:21
msgid ""
"You can also load javascript files from disk by calling "
"load(\"filepath.js\")"
msgstr "调用load（“ filepath.js”）从磁盘加载javascript文件"

#: ../../source/cli.rst:22
msgid "You can navigate to previous commands by using arrow keys"
msgstr "使用箭头键导航到先前的命令"

#: ../../source/cli.rst:23
msgid "You can auto-complete basic command with tab"
msgstr "使用 Tab 自动完成基本命令"

#: ../../source/cli.rst:28
msgid ""
"For more advanced operations with the node use `Web3 "
"<https://nethermind.readthedocs.io/en/latest/web3.html>`_ or ether.js libs "
"or Truffle, Metamask, etc."
msgstr ""
"要对节点进行更高级的操作，使用Web3 "
"<https://nethermind.readthedocs.io/en/latest/web3.html>`_或ether.js库 "
"或Truffle，Metamask 等。"

#: ../../source/cli.rst:31
msgid ""
"Below you will find the available list of CLI operations and you can find "
"more information about each call `here "
"<https://nethermind.readthedocs.io/en/latest/jsonrpc.html>`_"
msgstr ""
"以下是CLI操作的可用列表，而`在此处 "
"<https://nethermind.readthedocs.io/en/latest/jsonrpc.html>`_有关每个调用的更多信息。"

#: ../../source/cli.rst:34
msgid "admin"
msgstr "admin"

#: ../../source/cli.rst:37
msgid "admin.addPeer(enode, addToStaticNodes)"
msgstr "admin.addPeer(enode, addToStaticNodes)"

#: ../../source/cli.rst:37 ../../source/cli.rst:40 ../../source/cli.rst:43
#: ../../source/cli.rst:49 ../../source/cli.rst:52 ../../source/cli.rst:55
#: ../../source/cli.rst:58 ../../source/cli.rst:61 ../../source/cli.rst:64
#: ../../source/cli.rst:67 ../../source/cli.rst:70 ../../source/cli.rst:73
#: ../../source/cli.rst:79 ../../source/cli.rst:82 ../../source/cli.rst:85
#: ../../source/cli.rst:88 ../../source/cli.rst:91 ../../source/cli.rst:94
#: ../../source/cli.rst:97 ../../source/cli.rst:100 ../../source/cli.rst:103
#: ../../source/cli.rst:106 ../../source/cli.rst:109 ../../source/cli.rst:112
#: ../../source/cli.rst:115 ../../source/cli.rst:121 ../../source/cli.rst:127
#: ../../source/cli.rst:130 ../../source/cli.rst:133 ../../source/cli.rst:136
#: ../../source/cli.rst:139 ../../source/cli.rst:142 ../../source/cli.rst:145
#: ../../source/cli.rst:148 ../../source/cli.rst:151 ../../source/cli.rst:154
#: ../../source/cli.rst:157 ../../source/cli.rst:160 ../../source/cli.rst:163
#: ../../source/cli.rst:166 ../../source/cli.rst:169 ../../source/cli.rst:172
#: ../../source/cli.rst:175 ../../source/cli.rst:178 ../../source/cli.rst:181
#: ../../source/cli.rst:184 ../../source/cli.rst:187 ../../source/cli.rst:190
#: ../../source/cli.rst:193 ../../source/cli.rst:196 ../../source/cli.rst:202
#: ../../source/cli.rst:205 ../../source/cli.rst:208 ../../source/cli.rst:220
#: ../../source/cli.rst:244 ../../source/cli.rst:247 ../../source/cli.rst:250
#: ../../source/cli.rst:253 ../../source/cli.rst:259 ../../source/cli.rst:262
#: ../../source/cli.rst:265 ../../source/cli.rst:271 ../../source/cli.rst:274
#: ../../source/cli.rst:298 ../../source/cli.rst:301 ../../source/cli.rst:304
#: ../../source/cli.rst:310 ../../source/cli.rst:313 ../../source/cli.rst:316
#: ../../source/cli.rst:319
msgid "<check JSON RPC docs>"
msgstr "<check JSON RPC docs>"

#: ../../source/cli.rst:40
msgid "admin.peers"
msgstr "admin.peers"

#: ../../source/cli.rst:43
msgid "admin.removePeer(enode, removeFromStaticNodes)"
msgstr "admin.removePeer(enode, removeFromStaticNodes)"

#: ../../source/cli.rst:46
msgid "clique"
msgstr "clique"

#: ../../source/cli.rst:49
msgid "clique.discard(address)"
msgstr "clique.discard(address)"

#: ../../source/cli.rst:52
msgid "clique.getSigners()"
msgstr "clique.getSigners()"

#: ../../source/cli.rst:55
msgid "clique.getSignersAnnotated()"
msgstr "clique.getSignersAnnotated()"

#: ../../source/cli.rst:58
msgid "clique.getSignersAtHash(hash)"
msgstr "clique.getSignersAtHash(hash)"

#: ../../source/cli.rst:61
msgid "clique.getSignersAtHashAnnotated(hash)"
msgstr "clique.getSignersAtHashAnnotated(hash)"

#: ../../source/cli.rst:64
msgid "clique.getSignersAtNumber(number)"
msgstr "clique.getSignersAtNumber(number)"

#: ../../source/cli.rst:67
msgid "clique.getSnapshot()"
msgstr "clique.getSnapshot()"

#: ../../source/cli.rst:70
msgid "clique.getSnapshotAtHash(hash)"
msgstr "clique.getSnapshotAtHash(hash)"

#: ../../source/cli.rst:73
msgid "clique.propose(address, vote)"
msgstr "clique.propose(address, vote)"

#: ../../source/cli.rst:76
msgid "debug"
msgstr "debug"

#: ../../source/cli.rst:79
msgid "debug.deleteChainSlice(startNumber, endNumber)"
msgstr "debug.deleteChainSlice(startNumber, endNumber)"

#: ../../source/cli.rst:82
msgid "debug.getBlockRlp(number)"
msgstr "debug.getBlockRlp(number)"

#: ../../source/cli.rst:85
msgid "debug.getBlockRlpByHash(hash)"
msgstr "debug.getBlockRlpByHash(hash)"

#: ../../source/cli.rst:88
msgid "debug.getChainlevel(number)"
msgstr "debug.getChainlevel(number)"

#: ../../source/cli.rst:91
msgid "debug.config(category, name)"
msgstr "debug.config(category, name)"

#: ../../source/cli.rst:94
msgid "debug.traceBlock(rlp, options)"
msgstr "debug.traceBlock(rlp, options)"

#: ../../source/cli.rst:97
msgid "debug.traceBlockByHash(hash, options)"
msgstr "debug.traceBlockByHash(hash, options)"

#: ../../source/cli.rst:100
msgid "debug.traceBlockByNumber(number, options)"
msgstr "debug.traceBlockByNumber(number, options)"

#: ../../source/cli.rst:103
msgid "debug.traceTransaction(hash, options)"
msgstr "debug.traceTransaction(hash, options)"

#: ../../source/cli.rst:106
msgid "debug.traceTransactionByBlockAndIndex(hash, options)"
msgstr "debug.traceTransactionByBlockAndIndex(hash, options)"

#: ../../source/cli.rst:109
msgid "debug.traceTransactionByBlockhashAndIndex(hash, options)"
msgstr "debug.traceTransactionByBlockhashAndIndex(hash, options)"

#: ../../source/cli.rst:112
msgid "debug.traceTransactionInBlockByHash(rlp, hash, options)"
msgstr "debug.traceTransactionInBlockByHash(rlp, hash, options)"

#: ../../source/cli.rst:115
msgid "debug.traceTransactionInBlockByIndex(rlp, index, options)"
msgstr "debug.traceTransactionInBlockByIndex(rlp, index, options)"

#: ../../source/cli.rst:118
msgid "diag"
msgstr "diag"

#: ../../source/cli.rst:121
msgid "diag.cliVersion"
msgstr "diag.cliVersion"

#: ../../source/cli.rst:124
msgid "eth"
msgstr "eth"

#: ../../source/cli.rst:127
msgid "eth.blockNumber"
msgstr "eth.blockNumber"

#: ../../source/cli.rst:130
msgid "eth.getProof(address, storageKeys, blockParameter)"
msgstr "eth.getProof(address, storageKeys, blockParameter)"

#: ../../source/cli.rst:133
msgid "eth.call(tx, blockParameter)"
msgstr "eth.call(tx, blockParameter)"

#: ../../source/cli.rst:136
msgid "eth.chainId"
msgstr "eth.chainId"

#: ../../source/cli.rst:139
msgid "eth.estimateGas(json)"
msgstr "eth.estimateGas(json)"

#: ../../source/cli.rst:142
msgid "eth.getBalance(address, blockParameter)"
msgstr "eth.getBalance(address, blockParameter)"

#: ../../source/cli.rst:145
msgid "eth.getBlockByHash(hash, returnFullTransactionObjects)"
msgstr "eth.getBlockByHash(hash, returnFullTransactionObjects)"

#: ../../source/cli.rst:148
msgid "eth.getBlockByNumber(blockParameter, returnFullTransactionObjects)"
msgstr "eth.getBlockByNumber(blockParameter, returnFullTransactionObjects)"

#: ../../source/cli.rst:151
msgid "eth.getBlockTransactionCountByHash(hash)"
msgstr "eth.getBlockTransactionCountByHash(hash)"

#: ../../source/cli.rst:154
msgid "eth.getBlockTransactionCountByNumber(blockParameter)"
msgstr "eth.getBlockTransactionCountByNumber(blockParameter)"

#: ../../source/cli.rst:157
msgid "eth.getCode(address, blockParameter)"
msgstr "eth.getCode(address, blockParameter)"

#: ../../source/cli.rst:160
msgid "eth.getLogs(filter)"
msgstr "eth.getLogs(filter)"

#: ../../source/cli.rst:163
msgid "eth.getStorageAt(address, positionIndex, blockParameter)"
msgstr "eth.getStorageAt(address, positionIndex, blockParameter)"

#: ../../source/cli.rst:166
msgid "eth.getTransactionByBlockNumberAndIndex(blockParameter, index)"
msgstr "eth.getTransactionByBlockNumberAndIndex(blockParameter, index)"

#: ../../source/cli.rst:169
msgid "eth.getTransactionByHash(txHash)"
msgstr "eth.getTransactionByHash(txHash)"

#: ../../source/cli.rst:172
msgid "eth.getTransactionCount(address, blockParameter)"
msgstr "eth.getTransactionCount(address, blockParameter)"

#: ../../source/cli.rst:175
msgid "eth.getTransactionReceipt(txHash)"
msgstr "eth.getTransactionReceipt(txHash)"

#: ../../source/cli.rst:178
msgid "eth.getUncleCountByBlockNumber(blockParameter)"
msgstr "eth.getUncleCountByBlockNumber(blockParameter)"

#: ../../source/cli.rst:181
msgid "eth.pendingTransactions"
msgstr "eth.pendingTransactions"

#: ../../source/cli.rst:184
msgid "eth.protocolVersion"
msgstr "eth.protocolVersion"

#: ../../source/cli.rst:187
msgid "eth.sendEth(from, to, amountInEth)"
msgstr "eth.sendEth(from, to, amountInEth)"

#: ../../source/cli.rst:190
msgid "eth.sendRawTransaction(txRlp)"
msgstr "eth.sendRawTransaction(txRlp)"

#: ../../source/cli.rst:193
msgid "eth.sendTransaction(tx)"
msgstr "eth.sendTransaction(tx)"

#: ../../source/cli.rst:196
msgid "eth.sendWei(from, to, amountInWei)"
msgstr "eth.sendWei(from, to, amountInWei)"

#: ../../source/cli.rst:199
msgid "net"
msgstr "net"

#: ../../source/cli.rst:202
msgid "net.localEnode"
msgstr "net.localEnode"

#: ../../source/cli.rst:205
msgid "net.peerCount"
msgstr "net.peerCount"

#: ../../source/cli.rst:208
msgid "net.version"
msgstr "net.version"

#: ../../source/cli.rst:211
msgid "node"
msgstr "节点"

#: ../../source/cli.rst:214
msgid "node.address"
msgstr "node.address"

#: ../../source/cli.rst:214
msgid ""
"Displays the address of the node key (the key that is used for network "
"identity)."
msgstr "显示节点密钥（用于网络标识的密钥）的地址。"

#: ../../source/cli.rst:217
msgid "node.enode"
msgstr "node.enode"

#: ../../source/cli.rst:217
msgid "Displays the currently connected node enode value."
msgstr "显示当前连接的节点enode价值。"

#: ../../source/cli.rst:220
msgid "node.setNodeKey(key)"
msgstr "node.setNodeKey(key)"

#: ../../source/cli.rst:223
msgid "node.switch(uri)"
msgstr "node.switch(uri)"

#: ../../source/cli.rst:223
msgid "Changes the address of the node that the CLI is talking to."
msgstr "更改CLI与之交互的节点的地址。"

#: ../../source/cli.rst:226
msgid "node.switchLocal(port)"
msgstr "node.switchLocal(port)"

#: ../../source/cli.rst:226
msgid ""
"Changes the address of the node that the CLI is talking to localhost:port."
msgstr "更改CLI与之交互的节点的地址 localhost:port."

#: ../../source/cli.rst:229
msgid "node.uri"
msgstr "node.uri"

#: ../../source/cli.rst:229
msgid "Displays the URL of the node that the CLI is currently talking to."
msgstr "显示CLI当前正在与之交互的节点的URL。"

#: ../../source/cli.rst:232
msgid "parity"
msgstr "奇偶校验"

#: ../../source/cli.rst:235
msgid "parity.getBlockReceipts(blockParameter)"
msgstr "parity.getBlockReceipts(blockParameter)"

#: ../../source/cli.rst:235
msgid "Returns receipts from all transactions from particular block"
msgstr "返回来自特定块的所有交易的收据"

#: ../../source/cli.rst:238
msgid "parity.pendingTransactions()"
msgstr "parity.pendingTransactions()"

#: ../../source/cli.rst:238
msgid "Returns the pending transactions using Parity format"
msgstr "使用奇偶校验格式返回未决的交易"

#: ../../source/cli.rst:241
msgid "personal"
msgstr "personal"

#: ../../source/cli.rst:244
msgid "personal.listAccounts"
msgstr "personal.listAccounts"

#: ../../source/cli.rst:247
msgid "personal.lockAccount(addressHex)"
msgstr "personal.lockAccount(addressHex)"

#: ../../source/cli.rst:250
msgid "personal.newAccount(password)"
msgstr "personal.newAccount(password)"

#: ../../source/cli.rst:253
msgid "personal.unlockAccount(addressHex, password)"
msgstr "personal.unlockAccount(addressHex, password)"

#: ../../source/cli.rst:256
msgid "proof"
msgstr "证明方式"

#: ../../source/cli.rst:259
msgid "proof.call(tx, blockParameter)"
msgstr "proof.call(tx, blockParameter)"

#: ../../source/cli.rst:262
msgid "proof.getTransactionByHash(transactionHash, includeHeader)"
msgstr "proof.getTransactionByHash(transactionHash, includeHeader)"

#: ../../source/cli.rst:265
msgid "proof.getTransactionReceipt(transactionHash, includeHeader)"
msgstr "proof.getTransactionReceipt(transactionHash, includeHeader)"

#: ../../source/cli.rst:268
msgid "system"
msgstr "系统"

#: ../../source/cli.rst:271
msgid "system.getVariable(name, defaultValue)"
msgstr "system.getVariable(name, defaultValue)"

#: ../../source/cli.rst:274
msgid "system.memory"
msgstr "system.memory"

#: ../../source/cli.rst:277
msgid "trace"
msgstr "跟踪"

#: ../../source/cli.rst:280
msgid "trace.replayBlockTransactions(blockNumber, traceTypes)"
msgstr "trace.replayBlockTransactions(blockNumber, traceTypes)"

#: ../../source/cli.rst:280
msgid ""
"Replays all transactions in a block returning the requested traces for each "
"transaction."
msgstr "在一个块中重播所有事务，返回每个事务的请求跟踪。"

#: ../../source/cli.rst:283
msgid "trace.replayTransaction(txHash, traceTypes)"
msgstr "trace.replayTransaction(txHash, traceTypes)"

#: ../../source/cli.rst:283
msgid "Replays a transaction, returning the traces."
msgstr "重播事务，返回跟踪。"

#: ../../source/cli.rst:286
msgid "trace.block(blockNumber)"
msgstr "trace.block(blockNumber)"

#: ../../source/cli.rst:286
msgid "Returns traces created at given block."
msgstr "返回在给定块上创建的跟踪。"

#: ../../source/cli.rst:289
msgid "trace.rawTransaction(txData, traceTypes)"
msgstr "trace.rawTransaction(txData, traceTypes)"

#: ../../source/cli.rst:289
msgid ""
"Traces a call to eth_sendRawTransaction without making the call, returning "
"the traces"
msgstr "跟踪对eth_sendRawTransaction的调用而不进行调用，返回跟踪"

#: ../../source/cli.rst:292
msgid "trace.transaction(txHash)"
msgstr "trace.transaction(txHash)"

#: ../../source/cli.rst:292
msgid "Returns all traces of given transaction"
msgstr "返回给定事务的所有跟踪"

#: ../../source/cli.rst:295
msgid "txpool"
msgstr "txpool"

#: ../../source/cli.rst:298
msgid "txpool.content"
msgstr "txpool.content"

#: ../../source/cli.rst:301
msgid "txpool.inspect"
msgstr "txpool.inspect"

#: ../../source/cli.rst:304
msgid "txpool.status"
msgstr "txpool.status"

#: ../../source/cli.rst:307
msgid "web3"
msgstr "web3"

#: ../../source/cli.rst:310
msgid "web3.abi(name)"
msgstr "web3.abi(name)"

#: ../../source/cli.rst:313
msgid "web3.clientVersion"
msgstr "web3.clientVersion"

#: ../../source/cli.rst:316
msgid "web3.sha3(data)"
msgstr "web3.sha3(data)"

#: ../../source/cli.rst:319
msgid "web3.toDecimal(hex)"
msgstr "web3.toDecimal(hex)"
