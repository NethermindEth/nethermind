{
  "fileName": "FullPruner.cs",
  "filePath": "src/Nethermind/Nethermind.Blockchain/FullPruning/FullPruner.cs",
  "url": "https://github.com/NethermindEth/nethermind/src/Nethermind/Nethermind.Blockchain/FullPruning/FullPruner.cs",
  "summary": "The `FullPruner` class is the main orchestrator of Full Pruning in the Nethermind project. Full Pruning is a process that removes old and unused data from the blockchain database to reduce its size and improve performance. The `FullPruner` class is responsible for starting and managing the Full Pruning process.\n\nThe `FullPruner` class implements the `IDisposable` interface, which means that it can be used in a `using` statement to ensure that it is properly disposed of when it is no longer needed.\n\nThe `FullPruner` class has several private fields that are used to store references to other objects that it needs to perform its tasks. These include an `IFullPruningDb` object, an `IPruningTrigger` object, an `IPruningConfig` object, an `IBlockTree` object, an `IStateReader` object, an `ILogManager` object, an `IPruningContext` object, and several other fields that are used to keep track of the state of the Full Pruning process.\n\nThe `FullPruner` class has a constructor that takes several parameters, including the objects that it needs to perform its tasks. The constructor initializes the private fields with the values of the corresponding parameters.\n\nThe `FullPruner` class has a public method called `Dispose` that is used to dispose of the `FullPruner` object when it is no longer needed. The `Dispose` method removes event handlers and disposes of the `IPruningContext` object.\n\nThe `FullPruner` class has a private method called `OnPrune` that is called when the `IPruningTrigger` object raises the `Prune` event. The `OnPrune` method checks whether Full Pruning is already in progress and whether the minimum pruning delay has elapsed. If Full Pruning is not already in progress and the minimum pruning delay has elapsed, the `OnPrune` method sets a flag to indicate that Full Pruning is starting and waits for the `IBlockTree` object to raise the `OnUpdateMainChain` event.\n\nThe `FullPruner` class has a private method called `OnUpdateMainChain` that is called when the `IBlockTree` object raises the `OnUpdateMainChain` event. The `OnUpdateMainChain` method checks whether Full Pruning can be started and whether the block processing is complete. If Full Pruning can be started and block processing is complete, the `OnUpdateMainChain` method starts Full Pruning by creating an `IPruningContext` object and setting the `_currentPruning` field to the new object. The `OnUpdateMainChain` method then waits for the state to be ready and starts the Full Pruning process.\n\nThe `FullPruner` class has a private method called `RunPruning` that is called to run the Full Pruning process. The `RunPruning` method creates a `CopyTreeVisitor` object and uses it to copy the state trie to the new database. The `RunPruning` method then commits the changes to the new database and disposes of the `IPruningContext` object.\n\nOverall, the `FullPruner` class is an important part of the Full Pruning process in the Nethermind project. It is responsible for starting and managing the Full Pruning process, and it uses several other objects to perform its tasks. The `FullPruner` class is designed to be used in a `using` statement to ensure that it is properly disposed of when it is no longer needed.",
  "questions": "1. What is the purpose of this code?\n- This code is the main orchestrator of Full Pruning in the Nethermind blockchain project.\n\n2. What external dependencies does this code have?\n- This code has dependencies on several other Nethermind modules, including `Nethermind.Core`, `Nethermind.Db`, `Nethermind.Logging`, and `Nethermind.State`.\n\n3. What is the FullPruningCompletionBehavior and how is it used?\n- `FullPruningCompletionBehavior` is a configuration option that determines what action to take when full pruning is completed. Depending on the value of this option, the code may shut down the application or take no action."
}