{
  "fileName": "SyncConfig.cs",
  "filePath": "src/Nethermind/Nethermind.Blockchain/Synchronization/SyncConfig.cs",
  "url": "https://github.com/NethermindEth/nethermind/src/Nethermind/Nethermind.Blockchain/Synchronization/SyncConfig.cs",
  "summary": "The `SyncConfig` class is a configuration class that defines the synchronization modes for the Nethermind blockchain. It is used to configure the synchronization process for the blockchain nodes. The class contains a set of properties that can be used to configure the synchronization process. \n\nThe `SyncConfig` class implements the `ISyncConfig` interface, which defines the synchronization configuration properties. The `ISyncConfig` interface is used to ensure that the `SyncConfig` class implements all the required properties for synchronization configuration.\n\nThe `SyncConfig` class has several static properties that can be used to create pre-configured synchronization modes. These properties are `Default`, `WithFullSyncOnly`, `WithFastSync`, `WithFastBlocks`, and `WithEth2Merge`. These properties can be used to quickly configure the synchronization mode for the blockchain nodes.\n\nThe `SyncConfig` class has several properties that can be used to configure the synchronization process. These properties include `NetworkingEnabled`, `SynchronizationEnabled`, `FastSyncCatchUpHeightDelta`, `FastBlocks`, `UseGethLimitsInFastBlocks`, `DownloadHeadersInFastSync`, `DownloadBodiesInFastSync`, `DownloadReceiptsInFastSync`, `AncientBodiesBarrier`, `AncientReceiptsBarrier`, `PivotTotalDifficulty`, `PivotNumber`, `PivotHash`, `WitnessProtocolEnabled`, `SnapSync`, `SnapSyncAccountRangePartitionCount`, `FixReceipts`, `FixTotalDifficulty`, `FixTotalDifficultyStartingBlock`, `FixTotalDifficultyLastBlock`, `StrictMode`, `BlockGossipEnabled`, `NonValidatorNode`, and `TuneDbMode`.\n\nThe `ToString()` method is overridden to provide a string representation of the `SyncConfig` object. It returns a string that contains the details of the synchronization configuration.\n\nExample usage:\n\n```csharp\n// create a new SyncConfig object\nvar syncConfig = new SyncConfig();\n\n// configure the synchronization process\nsyncConfig.FastSync = true;\nsyncConfig.DownloadHeadersInFastSync = true;\nsyncConfig.DownloadBodiesInFastSync = true;\nsyncConfig.DownloadReceiptsInFastSync = true;\n\n// use the SyncConfig object to configure the blockchain node\nvar nodeConfig = new NodeConfig();\nnodeConfig.SyncConfig = syncConfig;\n```",
  "questions": "1. What is the purpose of the `SyncConfig` class?\n- The `SyncConfig` class is used to configure synchronization modes in the Nethermind blockchain.\n\n2. What are some of the properties that can be set in `SyncConfig`?\n- Properties that can be set in `SyncConfig` include `FastSync`, `FastBlocks`, `DownloadHeadersInFastSync`, `DownloadBodiesInFastSync`, `DownloadReceiptsInFastSync`, `AncientBodiesBarrier`, `AncientReceiptsBarrier`, `PivotNumber`, `WitnessProtocolEnabled`, `SnapSync`, `FixReceipts`, `FixTotalDifficulty`, `FixTotalDifficultyStartingBlock`, `FixTotalDifficultyLastBlock`, `StrictMode`, `BlockGossipEnabled`, `NonValidatorNode`, and `TuneDbMode`.\n\n3. What are some of the static instances of `SyncConfig` that are available?\n- Some of the static instances of `SyncConfig` that are available include `Default`, `WithFullSyncOnly`, `WithFastSync`, `WithFastBlocks`, and `WithEth2Merge`."
}