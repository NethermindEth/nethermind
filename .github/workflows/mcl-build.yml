name: MCL Build

on:
  repository_dispatch:
    types: mcl_build

jobs:
  mcl-building:
    name: Building mcl
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - name: Cloning required repositories
      run: |
        git clone git://github.com/herumi/mcl.git
    - name: Installing GMP for ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt install libgmp-dev
    - name: Installing GMP for osx
      if: matrix.os == 'macOS-latest'
      run: |
        brew install gmp
    - name: Cloning lib for Windows
      if: matrix.os == 'windows-latest'
      run: |
        git clone git://github.com/herumi/cybozulib_ext.git
    - name: Building MCL for Windows
      if: matrix.os == 'windows-latest'
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        cd D:\a\nethermind\nethermind\mcl && call mklib.bat dll
      shell: cmd
    - uses: actions/upload-artifact@v1
      name: Uploading Windows artifact
      if: matrix.os == 'windows-latest'
      with:
        name: windows_artifact
        path: mcl/bin/mclbn256.dll
    - name: Building MCL for Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd mcl/
        make -j4
    - name: Stripping Linux file
      if: matrix.os == 'ubuntu-latest'
      run: strip /home/runner/work/nethermind/nethermind/mcl/lib/libmclbn384_256.so
    - uses: actions/upload-artifact@v1
      name: Uploading Linux artifact
      if: matrix.os == 'ubuntu-latest'
      with:
        name: linux_artifact
        path: mcl/lib/libmclbn256.so
    - name: Building MCL for OSX
      if: matrix.os == 'macOS-latest'
      run: |
        cd mcl/
        make -j4
    - uses: actions/upload-artifact@v1
      name: Uploading Darwin artifact
      if: matrix.os == 'macOS-latest'
      with:
        name: darwin_artifact
        path: mcl/lib/libmclbn256.dylib
