name: Standard Build

on: push

jobs:
  neth-tests:
    name: Nethermind Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS]
    steps:
    - uses: actions/checkout@v2
    - name: Unshallow fetching
      run: git fetch --unshallow --progress --prune origin +refs/heads/*:refs/remotes/origin/*
    - name: Updating submodules
      run: git submodule update --init src/Dirichlet src/rocksdb-sharp
    - name: Installing Linux packages
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install libsnappy-dev libc6-dev libc6
    - name: Installing macOS packages
      if: matrix.os == 'macOS'
      run: brew install gmp && brew install snappy && brew install lz4
    - name: Nethermind.Abi.Test
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.Abi.Test;
    - name: Nethermind.AuRa.Test
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.AuRa.Test
    # - name: Nethermind.BeaconNode.Test
    #   run: |
    #     dotnet test -c Release src/Nethermind/Nethermind.BeaconNode.Test
    - name: Nethermind.Blockchain.Test
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.Blockchain.Test
    - name: Nethermind.Bls.Test
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.Bls.Test
    - name: Nethermind.Clique.Test
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.Clique.Test
    - name: Nethermind.Config.Test
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.Config.Test
    - name: Nethermind.Core.Test
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.Core.Test
    - name: Nethermind.Evm.Test
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.Evm.Test
    - name: Nethermind.Facade.Test
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.Facade.Test
    - name: Nethermind.Logging.NLog.Test
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.Logging.NLog.Test
    - name: Nethermind.JsonRpc.Test
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.JsonRpc.Test
    - name: Nethermind.Mining.Test
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.Mining.Test
    - name: Nethermind.Network.Test
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.Network.Test
    - name: Nethermind.Secp256k1.Test.Linux
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.Secp256k1.Test
    - name: Nethermind.Runner.Test
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.Runner.Test
    - name: Nethermind.Ssz.Test
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.Ssz.Test
    - name: Nethermind.Core2.Test
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.Core2.Test
    - name: Nethermind.Store.Test
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.Store.Test
    - name: Nethermind.Wallet.Test
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.Wallet.Test
    - name: Nethermind.DataMarketplace.Test
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.DataMarketplace.Test
    - name: Nethermind.DataMarketplace.Consumers.Test
      run: |
        dotnet test -c Release src/Nethermind/Nethermind.DataMarketplace.Consumers.Test
  eth-tests:
    name: Ethereum Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS]
    steps:
    - uses: actions/checkout@v2
    - name: Unshallow fetching
      run: git fetch --unshallow
    - name: Updating submodules
      run: git -c submodule."src/eth2.0-spec-tests".update=none submodule update --init
    - name: Ethereum.Basic.Test
      run: |
        dotnet test -c Release src/Nethermind/Ethereum.Basic.Test
    - name: Ethereum.Blockchain.Block.Test
      run: |
        dotnet test -c Release src/Nethermind/Ethereum.Blockchain.Block.Test
    - name: Ethereum.Blockchain.Test
      run: |
        dotnet test -c Release src/Nethermind/Ethereum.Blockchain.Test
    - name: Ethereum.Difficulty.Test
      run: |
        dotnet test -c Release src/Nethermind/Ethereum.Difficulty.Test
    - name: Ethereum.HexPrefix.Test
      run: |
        dotnet test -c Release src/Nethermind/Ethereum.HexPrefix.Test
    - name: Ethereum.KeyAddress.Test
      run: |
        dotnet test -c Release src/Nethermind/Ethereum.KeyAddress.Test
    - name: Ethereum.PoW.Test
      run: |
        dotnet test -c Release src/Nethermind/Ethereum.Rlp.Test
    - name: Ethereum.Rlp.Test
      run: |
        dotnet test -c Release src/Nethermind/Ethereum.Basic.Test
    - name: Ethereum.Transaction.Test
      run: |
        dotnet test -c Release src/Nethermind/Ethereum.Transaction.Test
    - name: Ethereum.Transition.Test
      run: |
        dotnet test -c Release src/Nethermind/Ethereum.Transition.Test
    - name: Ethereum.Trie.Test
      run: |
        dotnet test -c Release src/Nethermind/Ethereum.Trie.Test
#  eth2-tests:
#    name: Ethereum 2.0 Tests
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [ubuntu-latest, windows-latest, macOS]
#    steps:
#    - uses: actions/checkout@v2-beta
#      with:
#        lfs: true
#    - name: Updating submodules
#      run: git -c submodule."src/tests".update=none submodule update --init
#    - name: Ethereum.Bls.Test
#      run: |
#        dotnet test -c Release src/Nethermind/Ethereum2.Bls.Test
#    - name: Ethereum.Ssz.Test
#      run: |
#        dotnet test -c Release src/Nethermind/Ethereum2.Ssz.Test