name: Secp256k1 Build

on:
  repository_dispatch:
    types: secp_build

jobs:
  secp256k1-building:
    name: Building Secp256k1
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macOS-latest, ubuntu-latest]
    steps:
    - name: Cloning secp256k1 repository
      run: |
        git clone https://github.com/NethermindEth/secp256k1
    - name: Building secp256k1 for Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install autoconf libtool
        cd secp256k1/
        ./autogen.sh
        ./configure --enable-module-recovery --enable-experimental --enable-module-ecdh --enable-shared --with-bignum=no
        make
        strip .libs/libsecp256k1.so
    - uses: actions/upload-artifact@v1
      name: Uploading Linux artifact
      if: matrix.os == 'ubuntu-latest'
      with:
        name: linux_artifact_secp256k1
        path: secp256k1/.libs/libsecp256k1.so
    - name: Building secp256k1 for OSX
      if: matrix.os == 'macOS-latest'
      run: |
        brew install automake
        brew install libtool
        brew install gmp
        cd secp256k1/
        ./autogen.sh
        ./configure --enable-module-recovery --enable-experimental --enable-module-ecdh --enable-shared --with-bignum=no
        make
    - uses: actions/upload-artifact@v1
      name: Uploading Darwin artifact
      if: matrix.os == 'macOS-latest'
      with:
        name: darwin_artifact_secp256k1
        path: secp256k1/.libs/libsecp256k1.dylib
    - uses: numworks/setup-msys2@v1
      if: matrix.os == 'windows-latest'
      name: Setting up msys2 for Windows
    - name: Installing dependencies for secp256k1 build
      if: matrix.os == 'windows-latest'
      run: |
        msys2do pacman --noconfirm -S autoconf libtool make automake gcc mingw-w64-x86_64-gcc
    - run: |
        cat <<EOT >> run.sh
        mv secp256k1 64bit
        cd 64bit
        ./autogen.sh 
        echo "LDFLAGS = -no-undefined" >> Makefile.am
        ./configure --host=x86_64-w64-mingw32 --enable-module-recovery --enable-experimental --enable-module-ecdh --enable-shared --with-bignum=no
        make
        strip .libs/libsecp256k1-0.dll
        mv .libs/libsecp256k1-0.dll .libs/secp256k1.dll
        EOT
      if: matrix.os == 'windows-latest'
      name: Creating script for secp256k1 build
      shell: bash
    - run: msys2do ./run.sh
      if: matrix.os == 'windows-latest'
      name: Running secp256k1 build for Windows x64
    - uses: actions/upload-artifact@v1
      name: Uploading Windows artifact
      if: matrix.os == 'windows-latest'
      with:
        name: windows_artifact_secp256k1
        path: 64bit/.libs/secp256k1.dll
    # - name: Create Pull Request
    #   uses: peter-evans/create-pull-request@v2.4.4
    #   with:
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     commit-message: Update Secp256k1
    #     body: |
    #       New Secp256k1 library has been built.
    #       - Please upload the new library file to it's destination folder in Nethermind repo
    #       - Auto-generated by [create-pull-request][1]
    #       [1]: https://github.com/peter-evans/create-pull-request
    #     title: 'Update Secp256k1 library in Nethermind repository'
    #     labels: libraries
    #     author-name: github-actions[bot]
    #     author-email: 41898282+github-actions[bot]@users.noreply.github.com
    #     committer-name: GitHub
    #     committer-email: noreply@github.com
    #     branch: libs-update
    #     branch-suffix: short-commit-hash
    #     base: master
    # - name: Checking Outputs
    #   run: |
    #     echo "Pull Request Number - ${{ env.PULL_REQUEST_NUMBER }}"
