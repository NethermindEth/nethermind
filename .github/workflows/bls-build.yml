name: BLS Build

on:
  repository_dispatch:
    types: bls_build

jobs:
  bls-building:
    name: Building bls
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - name: Cloning required repositories
      run: |
        git clone git://github.com/NethermindEth/bls.git
        git clone git://github.com/herumi/mcl.git
    - name: Installing GMP for ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt install libgmp-dev
    - name: Installing GMP for osx
      if: matrix.os == 'macOS-latest'
      run: |
        brew install gmp
    - name: Cloning lib for Windows
      if: matrix.os == 'windows-latest'
      run: |
        git clone git://github.com/herumi/cybozulib_ext.git
    - name: Building BLS for Windows
      if: matrix.os == 'windows-latest'
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        cd D:\a\nethermind\nethermind\mcl && call mklib.bat dll
        cd D:\a\nethermind\nethermind\mcl && call mk -d test\bls12_test.cpp
        cd D:\a\nethermind\nethermind\bls && call mklib.bat dll
        cd D:\a\nethermind\nethermind\bls && call mk -d test\bls_c384_test.cpp
      shell: cmd
    - uses: actions/upload-artifact@v1
      name: Uploading Windows artifact
      if: matrix.os == 'windows-latest'
      with:
        name: windows_artifact
        path: bls/bin/bls384_256.dll
    - name: Building BLS for Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd mcl/
        make lib/libmcl.a
        cd ..
        cd bls/
        make BLS_ETH=1 lib/libbls384_256.so
    - name: Stripping Linux file
      if: matrix.os == 'ubuntu-latest'
      run: strip /home/runner/work/nethermind/nethermind/bls/lib/libbls384_256.so
    - uses: actions/upload-artifact@v1
      name: Uploading Linux artifact
      if: matrix.os == 'ubuntu-latest'
      with:
        name: linux_artifact
        path: bls/lib/libbls384_256.so
    - name: Building BLS for OSX
      if: matrix.os == 'macOS-latest'
      run: |
        cd mcl/
        make lib/libmcl.a
        cd ..
        cd bls/
        make BLS_ETH=1 lib/libbls384_256.dylib
    - uses: actions/upload-artifact@v1
      name: Uploading Darwin artifact
      if: matrix.os == 'macOS-latest'
      with:
        name: darwin_artifact
        path: bls/lib/libbls384_256.dylib
    # - name: Create Pull Request
    #   uses: peter-evans/create-pull-request@v2.4.4
    #   with:
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     commit-message: Update BLS
    #     body: |
    #       New BLS library has been built.
    #       - Please upload the new library file to it's destination folder in Nethermind repo
    #       - Auto-generated by [create-pull-request][1]

    #       [1]: https://github.com/peter-evans/create-pull-request
    #     title: 'Update BLS library in Nethermind repository'
    #     labels: libraries
    #     author-name: github-actions[bot]
    #     author-email: 41898282+github-actions[bot]@users.noreply.github.com
    #     committer-name: GitHub
    #     committer-email: noreply@github.com
    #     branch: libs-update
    #     branch-suffix: short-commit-hash
    #     base: master
    # - name: Checking Outputs
    #   run: |
    #     echo "Pull Request Number - ${{ env.PULL_REQUEST_NUMBER }}"
