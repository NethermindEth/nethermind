name: Update docs

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      ref:
        description: Branch or tag
        required: true
        default: master

jobs: 
  update-docs:
    name: Update docs
    runs-on: ubuntu-latest
    steps:
      - name: Check out Nethermind repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.ref || github.ref }}
          path: n
      - name: Check out Nethermind docs repository
        uses: actions/checkout@v3
        with:
          repository: NethermindEth/docs
          ref: feature/docusaurus
          path: d
          token: ${{ secrets.REPOSITORY_DISPATCH_TOKEN }}
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7
      - name: Build DocGen
        working-directory: n
        run: dotnet build tools/docgen/DocGen.csproj -c release -o docgen
      - name: Generate docs
        run: |
          mv d/docs/fundamentals/configuration.md n/docgen/configuration.md
          mv d/docs/monitoring/metrics/metrics.md n/docgen/metrics.md
          cd n/docgen && ./DocGen && cd ../..
          mv n/docgen/configuration.md d/docs/fundamentals/configuration.md
          rm -f d/docs/interacting/json-rpc-ns/*.md
          mv n/docgen/json-rpc-ns/*.md d/docs/interacting/json-rpc-ns
          mv n/docgen/metrics.md d/docs/monitoring/metrics/metrics.md
      - name: Tag a new version
        if: github.event_name == 'release'
        working-directory: d
        run: |
          echo ${{ github.event_name }}
          releases_url=https://api.github.com/repos/nethermindeth/nethermind/releases
          read tag_name prerelease < <(echo $(curl -s $releases_url/latest | jq -r '.tag_name, .prerelease'))
          read tag_name0 prerelease0 < <(echo $(curl -s $releases_url | jq -r '.[0] | .tag_name, .prerelease'))
          updated=$([ $tag_name = $tag_name0 ] && [ $prerelease = 'false' ] && echo "true" || echo "false")
          if [ "$updated" = "true" ]
          then
            npm install
            npm run docusaurus docs:version v$tag_name
          fi
      - name: Create a pull request
        working-directory: d
        env:
          GH_TOKEN: ${{ secrets.REPOSITORY_DISPATCH_TOKEN }}
        run: |
          head_branch=feature/auto-update-${{ github.run_number }}-${{ github.run_attempt }}
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git checkout -b $head_branch
          git add -A
          git commit -am "Update docs"
          git push origin $head_branch
          gh pr create -B feature/docusaurus -H $head_branch -t "Auto-update docs" -b "Autogenerated docs" -l docgen

    
