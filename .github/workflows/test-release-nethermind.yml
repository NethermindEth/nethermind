name: 'TEST - [RELEASE] Nethermind'

on: 
  push:
  workflow_dispatch:
    inputs:
      tag:
        description: 'The TAG of the version you want to release.'
        required: false
        default: 'master'

permissions:
  deployments: write
  packages: write
  contents: write
  
concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
jobs:
  build-nethermind:
    name: Building Nethermind Packages
    runs-on: ubuntu-latest
    env:      
      RELEASE_DIRECTORY: /home/runner/work/nethermind/nethermind
      LIN_RELEASE: nethermind-lin-x64
      OSX_RELEASE: nethermind-osx-x64
      WIN_RELEASE: nethermind-win-x64
      LIN_ARM64_RELEASE: nethermind-lin-arm64
      OSX_ARM64_RELEASE: nethermind-osx-arm64
      LINUX: linux-x64
      OSX: osx-x64
      WIN10: win10-x64
      LINUX_ARM64: linux-arm64
      OSX_ARM64: osx-arm64
    steps:
    - name: Checking out Nethermind repository
      uses: actions/checkout@master
      with:
        submodules: recursive
        path: nethermind
        ref: ${{ github.event.inputs.tag }}
        fetch-depth: 0
    - name: Checking out Nethermind Launcher repository
      uses: actions/checkout@master
      with:
        repository: NethermindEth/nethermind.launcher
        path: launcher
    - name: Setting up Node.js
      uses: actions/setup-node@master
      with:
        node-version: "14"
    - name: Setting up Build Environment
      run: |
        npm i pkg @vercel/ncc -g
    - name: Setting up dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
    - name: Setting up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Setting up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    - name: Setting up Packages
      run: ./nethermind/scripts/deployment/setup-packages.sh
    - name: Building Runner
      run: ./nethermind/scripts/deployment/build-runner.sh
    - name: Building Cli
      run: ./nethermind/scripts/deployment/build-cli.sh
    - name: Building Launcher
      run: ./nethermind/scripts/deployment/build-launcher.sh
    - name: Building Launcher for arm64
      run: |
        cd nethermind/
        docker buildx build --platform=linux/arm64 -t tmp-launcher -f Dockerfile.launcher . --load
        docker run --platform=linux/arm64 -v $PWD:/opt/mount --rm tmp-launcher bash -c "cp /nethermind/Nethermind.Launcher /opt/mount/"
        mv Nethermind.Launcher ${{ env.RELEASE_DIRECTORY }}/${{ env.LIN_ARM64_RELEASE }}/Nethermind.Launcher
    - name: Archiving packages
      run: ./nethermind/scripts/deployment/archive-packages.sh
    - uses: actions/upload-artifact@master
      name: Uploading Nethermind darwin package
      with:
        name: nethermind-darwin-package
        path: ${{ env.RELEASE_DIRECTORY }}/${{ env.OSX_RELEASE }}/nethermind-darwin-amd64-*
    - uses: actions/upload-artifact@master
      name: Uploading Nethermind darwin arm64 package
      with:
        name: nethermind-darwin-arm64-package
        path: ${{ env.RELEASE_DIRECTORY }}/${{ env.OSX_ARM64_RELEASE }}/nethermind-darwin-arm64-*
    - uses: actions/upload-artifact@master
      name: Uploading git-hash files
      with:
        name: nethermind-git-hash
        path: ${{ env.RELEASE_DIRECTORY }}/git-*      
        
        
  update-homebrew:
    name: Update Homebrew to latest version
    runs-on: ubuntu-latest
    needs: build-nethermind
    env:
      OSX_RELEASE: nethermind-osx-x64
      OSX_ARM64_RELEASE: nethermind-osx-arm64
      RELEASE_DIRECTORY: /home/runner/work/nethermind/nethermind 
    steps:
      - name: Downloading Nethermind darwin package
        uses: actions/download-artifact@master
        with:
          name: nethermind-darwin-package
          path: ${{ env.RELEASE_DIRECTORY }}/${{ env.OSX_RELEASE }}/
      - name: Downloading Nethermind darwin arm64 package
        uses: actions/download-artifact@master
        with:
          name: nethermind-darwin-arm64-package
          path: ${{ env.RELEASE_DIRECTORY }}/${{ env.OSX_ARM64_RELEASE }}/
      - name: Downloading git-hash files
        uses: actions/download-artifact@master
        with:
          name: nethermind-git-hash
          path: ${{ env.RELEASE_DIRECTORY }}/
          
      - name: Checkout repository
        uses: actions/checkout@master
        with: 
          repository: NethermindEth/homebrew-nethermind
          path: homebrew-nethermind

      - name: Download homebrew file for now, as it's not in master branch
        run: |
          wget https://raw.githubusercontent.com/NethermindEth/nethermind/homebrew-update-workflow/scripts/deployment/update-homebrew.sh
      
      - name: Update Homebrew file with new version, commit and date
        run: | 
          chmod +x update-homebrew.sh
          ./update-homebrew.sh
        #run: ./nethermind/scripts/deployment/update-homebrew.sh

      - name: cat homebrew file to verify update
        run: cat homebrew-nethermind/nethermind.rb

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          path: homebrew-nethermind
          add-paths: |
            nethermind.rb
