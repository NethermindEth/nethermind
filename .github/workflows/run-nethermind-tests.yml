name: '[RUN] Nethermind/Ethereum Tests'

concurrency: 
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}  

on: 
  push:
  pull_request:
  workflow_dispatch:

env:
  BUILD_CONFIG: release
  VERSION: 0.0.0

jobs:
  neth-tests:
    name: Running Nethermind Tests 1
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setting up .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Installing Linux packages
      run: |
        sudo apt-get update
        sudo apt-get install libsnappy-dev libc6-dev libc6
    - name: Nethermind.Blockchain.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Blockchain.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Abi.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Abi.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Api.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Api.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.AuRa.Test
      run: |
        dotnet test src/Nethermind/Nethermind.AuRa.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.AccountAbstraction.Test
      run: |
        dotnet test src/Nethermind/Nethermind.AccountAbstraction.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}

  neth-tests2:
    name: Running Nethermind Tests 2
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setting up .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Installing Linux packages
      run: |
        sudo apt-get update
        sudo apt-get install libsnappy-dev libc6-dev libc6
    - name: Nethermind.Clique.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Clique.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Config.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Config.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Consensus.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Consensus.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Core.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Core.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Cryptography.Bls.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Cryptography.Bls.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Network.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Network.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Network.Discovery.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Network.Discovery.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Network.Dns.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Network.Dns.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Network.Enr.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Network.Enr.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Facade.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Facade.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Logging.NLog.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Logging.NLog.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: MathGmp.Native
      run: |
        dotnet test src/Math.Gmp.Native/MathGmp.Native.UnitTests -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
        
  neth-tests3:
    name: Running Nethermind Tests 3
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setting up .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Installing Linux packages
      run: |
        sudo apt-get update
        sudo apt-get install libsnappy-dev libc6-dev libc6
    - name: Nethermind.HealthChecks.Test
      run: |
        dotnet test src/Nethermind/Nethermind.HealthChecks.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.HonestValidator.Test
      run: |
        dotnet test src/Nethermind/Nethermind.HonestValidator.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Evm.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Evm.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Ethash.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Ethash.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.EthStats.Test
      run: |
        dotnet test src/Nethermind/Nethermind.EthStats.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.JsonRpc.Test
      run: |
        dotnet test src/Nethermind/Nethermind.JsonRpc.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Merge.Plugin.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Merge.Plugin.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Merge.AuRa.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Merge.AuRa.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Mev.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Mev.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Specs.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Specs.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}

  neth-tests4:
    name: Running Nethermind Tests 4
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setting up .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Installing Linux packages
      run: |
        sudo apt-get update
        sudo apt-get install libsnappy-dev libc6-dev libc6
    - name: Nethermind.Secp256k1.Test.Linux
      run: |
        dotnet test src/Nethermind/Nethermind.Secp256k1.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Synchronization.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Synchronization.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}

  neth-tests5:
    name: Running Nethermind Tests 5
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setting up .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Installing Linux packages
      run: |
        sudo apt-get update
        sudo apt-get install libsnappy-dev libc6-dev libc6
    - name: Nethermind.TxPool.Test
      run: |
        dotnet test src/Nethermind/Nethermind.TxPool.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}  
    - name: Nethermind.Trie.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Trie.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}   
    - name: Nethermind.Sockets.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Sockets.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Wallet.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Wallet.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Baseline.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Baseline.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Mining.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Mining.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.State.Test
      run: |
        dotnet test src/Nethermind/Nethermind.State.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}

  neth-tests-cortex:
    name: Running Cortex Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setting up .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Installing Linux packages
      run: |
        sudo apt-get update
        sudo apt-get install libsnappy-dev libc6-dev libc6
    - name: Nethermind.BeaconNode.Eth1Bridge.Test
      run: |
        dotnet test src/Nethermind/Nethermind.BeaconNode.Eth1Bridge.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.BeaconNode.Peering.Test
      run: |
        dotnet test src/Nethermind/Nethermind.BeaconNode.Peering.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.BeaconNode.Test
      run: |
        dotnet test src/Nethermind/Nethermind.BeaconNode.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Core2.Configuration.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Core2.Configuration.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Core2.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Core2.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}       
    - name: Nethermind.Ssz.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Ssz.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}

  neth-runner:
    name: Nethermind Runner Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setting up .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Installing Linux packages
      run: |
        sudo apt-get update
        sudo apt-get install libsnappy-dev libc6-dev libc6
    - name: Nethermind.Runner.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Runner.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.State.Test.Runner.Test
      run : |
        dotnet test src/Nethermind/Nethermind.State.Test.Runner.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Nethermind.Cli.Test
      run: |
        dotnet test src/Nethermind/Nethermind.Cli.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}

  eth-tests1:
    name: Running Ethereum Tests 1
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setting up .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Ethereum.Blockchain.Test
      run: |
        dotnet test src/Nethermind/Ethereum.Blockchain.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}

  eth-tests2:
    name: Running Ethereum Tests 2
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setting up .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Ethereum.Trie.Test
      run: |
        dotnet test src/Nethermind/Ethereum.Trie.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Ethereum.VM.Test
      run: |
        dotnet test src/Nethermind/Ethereum.VM.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
        
  eth-tests3:
    name: Running Ethereum Tests 3
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setting up .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Ethereum.Basic.Test
      run: |
        dotnet test src/Nethermind/Ethereum.Basic.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Ethereum.Blockchain.Block.Test
      run: |
        dotnet test src/Nethermind/Ethereum.Blockchain.Block.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}     
    - name: Ethereum.Abi.Test
      run: |
        dotnet test src/Nethermind/Ethereum.Abi.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Ethereum.Difficulty.Test
      run: |
        dotnet test src/Nethermind/Ethereum.Difficulty.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Ethereum.HexPrefix.Test
      run: |
        dotnet test src/Nethermind/Ethereum.HexPrefix.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Ethereum.KeyAddress.Test
      run: |
        dotnet test src/Nethermind/Ethereum.KeyAddress.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Ethereum.PoW.Test
      run: |
        dotnet test src/Nethermind/Ethereum.PoW.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Ethereum.Rlp.Test
      run: |
        dotnet test src/Nethermind/Ethereum.Rlp.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Ethereum.Transaction.Test
      run: |
        dotnet test src/Nethermind/Ethereum.Transaction.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
    - name: Ethereum.Transition.Test
      run: |
        dotnet test src/Nethermind/Ethereum.Transition.Test -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.VERSION }} -p:Commit=${{ github.sha }}
