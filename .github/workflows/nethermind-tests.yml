name: 'Nethermind/Ethereum tests'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches: [master]
  workflow_dispatch:

env:
  BUILD_CONFIG: release
  DOTNET_VERSION: 7
  DOTNET_INSTALL_DIR: '~/.dotnet'

jobs:
  neth-tests:
    name: 'Run Nethermind tests #1'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Cache dotnet
      id: cache-dotnet
      uses: actions/cache@v3
      with:
          path: ${{ env.DOTNET_INSTALL_DIR }}
          key: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}
          restore-keys: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}
    - name: Set up .NET
      if: ${{ steps.cache-dotnet.outputs.cache-hit != 'true' }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Install Apt Packages
      uses: awalsh128/cache-apt-pkgs-action@v1.2.4
      with:
          packages: libsnappy-dev libc6-dev libc6
          version: 1.0
    - name: Check out repository
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Cache nuget
      id: cache-nuget
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}

    - name: Nethermind.Abi.Test
      run: dotnet test src/Nethermind/Nethermind.Abi.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Api.Test
      run: dotnet test src/Nethermind/Nethermind.Api.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.AccountAbstraction.Test
      run: dotnet test src/Nethermind/Nethermind.AccountAbstraction.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.AuRa.Test
      run: dotnet test src/Nethermind/Nethermind.AuRa.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Blockchain.Test
      run: dotnet test src/Nethermind/Nethermind.Blockchain.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.JsonRpc.TraceStore.Tests
      run: dotnet test src/Nethermind/Nethermind.JsonRpc.TraceStore.Tests -c ${{ env.BUILD_CONFIG }}

  neth-tests2:
    name: 'Run Nethermind tests #2'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Cache dotnet
      id: cache-dotnet
      uses: actions/cache@v3
      with:
          path: ${{ env.DOTNET_INSTALL_DIR }}
          key: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}
          restore-keys: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}
    - name: Set up .NET
      if: ${{ steps.cache-dotnet.outputs.cache-hit != 'true' }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Install Apt Packages
      uses: awalsh128/cache-apt-pkgs-action@v1.2.4
      with:
          packages: libsnappy-dev libc6-dev libc6
          version: 1.0
    - name: Check out repository
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Cache nuget
      id: cache-nuget
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}

    - name: Nethermind.Clique.Test
      run: dotnet test src/Nethermind/Nethermind.Clique.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Config.Test
      run: dotnet test src/Nethermind/Nethermind.Config.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Consensus.Test
      run: dotnet test src/Nethermind/Nethermind.Consensus.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Core.Test
      run: dotnet test src/Nethermind/Nethermind.Core.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Facade.Test
      run: dotnet test src/Nethermind/Nethermind.Facade.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Logging.NLog.Test
      run: dotnet test src/Nethermind/Nethermind.Logging.NLog.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Network.Test
      run: dotnet test src/Nethermind/Nethermind.Network.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Network.Discovery.Test
      run: dotnet test src/Nethermind/Nethermind.Network.Discovery.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Network.Dns.Test
      run: dotnet test src/Nethermind/Nethermind.Network.Dns.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Network.Enr.Test
      run: dotnet test src/Nethermind/Nethermind.Network.Enr.Test -c ${{ env.BUILD_CONFIG }}

  neth-tests3:
    name: 'Run Nethermind tests #3'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Cache dotnet
      id: cache-dotnet
      uses: actions/cache@v3
      with:
          path: ${{ env.DOTNET_INSTALL_DIR }}
          key: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}
          restore-keys: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}
    - name: Set up .NET
      if: ${{ steps.cache-dotnet.outputs.cache-hit != 'true' }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Install Apt Packages
      uses: awalsh128/cache-apt-pkgs-action@v1.2.4
      with:
          packages: libsnappy-dev libc6-dev libc6
          version: 1.0
    - name: Check out repository
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Cache nuget
      id: cache-nuget
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}

    - name: Nethermind.Ethash.Test
      run: dotnet test src/Nethermind/Nethermind.Ethash.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.EthStats.Test
      run: dotnet test src/Nethermind/Nethermind.EthStats.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Evm.Test
      run: dotnet test src/Nethermind/Nethermind.Evm.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.HealthChecks.Test
      run: dotnet test src/Nethermind/Nethermind.HealthChecks.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.JsonRpc.Test
      run: dotnet test src/Nethermind/Nethermind.JsonRpc.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Merge.AuRa.Test
      run: dotnet test src/Nethermind/Nethermind.Merge.AuRa.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Merge.Plugin.Test
      run: dotnet test src/Nethermind/Nethermind.Merge.Plugin.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Mev.Test
      run: dotnet test src/Nethermind/Nethermind.Mev.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Specs.Test
      run: dotnet test src/Nethermind/Nethermind.Specs.Test -c ${{ env.BUILD_CONFIG }}

  neth-tests4:
    name: 'Run Nethermind tests #4'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Cache dotnet
      id: cache-dotnet
      uses: actions/cache@v3
      with:
          path: ${{ env.DOTNET_INSTALL_DIR }}
          key: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}
          restore-keys: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}
    - name: Set up .NET
      if: ${{ steps.cache-dotnet.outputs.cache-hit != 'true' }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Install Apt Packages
      uses: awalsh128/cache-apt-pkgs-action@v1.2.4
      with:
          packages: libsnappy-dev libc6-dev libc6
          version: 1.0
    - name: Check out repository
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Cache nuget
      id: cache-nuget
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}

    - name: Nethermind.Secp256k1.Test
      run: dotnet test src/Nethermind/Nethermind.Secp256k1.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Synchronization.Test
      run: dotnet test src/Nethermind/Nethermind.Synchronization.Test -c ${{ env.BUILD_CONFIG }}

  neth-tests5:
    name: 'Run Nethermind tests #5'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Cache dotnet
      id: cache-dotnet
      uses: actions/cache@v3
      with:
          path: ${{ env.DOTNET_INSTALL_DIR }}
          key: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}
          restore-keys: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}
    - name: Set up .NET
      if: ${{ steps.cache-dotnet.outputs.cache-hit != 'true' }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Install Apt Packages
      uses: awalsh128/cache-apt-pkgs-action@v1.2.4
      with:
          packages: libsnappy-dev libc6-dev libc6
          version: 1.0
    - name: Check out repository
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Cache nuget
      id: cache-nuget
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}

    - name: Nethermind.Mining.Test
      run: dotnet test src/Nethermind/Nethermind.Mining.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Serialization.Ssz.Test
      run: dotnet test src/Nethermind/Nethermind.Serialization.Ssz.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Sockets.Test
      run: dotnet test src/Nethermind/Nethermind.Sockets.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.State.Test
      run: dotnet test src/Nethermind/Nethermind.State.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Trie.Test
      run: dotnet test src/Nethermind/Nethermind.Trie.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.TxPool.Test
      run: dotnet test src/Nethermind/Nethermind.TxPool.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Wallet.Test
      run: dotnet test src/Nethermind/Nethermind.Wallet.Test -c ${{ env.BUILD_CONFIG }}

  neth-tests6:
    name: 'Run Nethermind tests #6'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Cache dotnet
      id: cache-dotnet
      uses: actions/cache@v3
      with:
          path: ${{ env.DOTNET_INSTALL_DIR }}
          key: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}
          restore-keys: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}
    - name: Set up .NET
      if: ${{ steps.cache-dotnet.outputs.cache-hit != 'true' }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Install Apt Packages
      uses: awalsh128/cache-apt-pkgs-action@v1.2.4
      with:
          packages: libsnappy-dev libc6-dev libc6
          version: 1.0
    - name: Check out repository
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Cache nuget
      id: cache-nuget
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}

    - name: Nethermind.Db.Test
      run: dotnet test src/Nethermind/Nethermind.Db.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Hive.Tests
      run: dotnet test src/Nethermind/Nethermind.Hive.Tests -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.KeyStore.Test
      run: dotnet test src/Nethermind/Nethermind.KeyStore.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Monitoring.Test
      run: dotnet test src/Nethermind/Nethermind.Monitoring.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Overseer.Test
      run: dotnet test src/Nethermind/Nethermind.Overseer.Test -c ${{ env.BUILD_CONFIG }}

  neth-runner:
    name: Run Nethermind.Runner tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Cache dotnet
      id: cache-dotnet
      uses: actions/cache@v3
      with:
          path: ${{ env.DOTNET_INSTALL_DIR }}
          key: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}
          restore-keys: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}
    - name: Set up .NET
      if: ${{ steps.cache-dotnet.outputs.cache-hit != 'true' }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Install Apt Packages
      uses: awalsh128/cache-apt-pkgs-action@v1.2.4
      with:
          packages: libsnappy-dev libc6-dev libc6
          version: 1.0
    - name: Check out repository
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Cache nuget
      id: cache-nuget
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}

    - name: Nethermind.Cli.Test
      run: dotnet test src/Nethermind/Nethermind.Cli.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.Runner.Test
      run: dotnet test src/Nethermind/Nethermind.Runner.Test -c ${{ env.BUILD_CONFIG }}
    - name: Nethermind.State.Test.Runner.Test
      run: dotnet test src/Nethermind/Nethermind.State.Test.Runner.Test -c ${{ env.BUILD_CONFIG }}
      
  eth-tests1:
    name: 'Run Ethereum tests #1'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Cache dotnet
      id: cache-dotnet
      uses: actions/cache@v3
      with:
          path: ${{ env.DOTNET_INSTALL_DIR }}
          key: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}
          restore-keys: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}
    - name: Set up .NET
      if: ${{ steps.cache-dotnet.outputs.cache-hit != 'true' }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Install Apt Packages
      uses: awalsh128/cache-apt-pkgs-action@v1.2.4
      with:
          packages: libsnappy-dev libc6-dev libc6
          version: 1.0
    - name: Check out repository
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Cache nuget
      id: cache-nuget
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}

    - name: Ethereum.Blockchain.Test
      run: dotnet test src/Nethermind/Ethereum.Blockchain.Test -c ${{ env.BUILD_CONFIG }}

  eth-tests2:
    name: 'Run Ethereum tests #2'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Cache dotnet
      id: cache-dotnet
      uses: actions/cache@v3
      with:
          path: ${{ env.DOTNET_INSTALL_DIR }}
          key: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}
          restore-keys: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}
    - name: Set up .NET
      if: ${{ steps.cache-dotnet.outputs.cache-hit != 'true' }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Install Apt Packages
      uses: awalsh128/cache-apt-pkgs-action@v1.2.4
      with:
          packages: libsnappy-dev libc6-dev libc6
          version: 1.0
    - name: Check out repository
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Cache nuget
      id: cache-nuget
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}

    - name: Ethereum.Trie.Test
      run: dotnet test src/Nethermind/Ethereum.Trie.Test -c ${{ env.BUILD_CONFIG }}
    - name: Ethereum.VM.Test
      run: dotnet test src/Nethermind/Ethereum.VM.Test -c ${{ env.BUILD_CONFIG }}

  eth-tests3:
    name: 'Run Ethereum tests #3'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Cache dotnet
      id: cache-dotnet
      uses: actions/cache@v3
      with:
          path: ${{ env.DOTNET_INSTALL_DIR }}
          key: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}
          restore-keys: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}
    - name: Set up .NET
      if: ${{ steps.cache-dotnet.outputs.cache-hit != 'true' }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Install Apt Packages
      uses: awalsh128/cache-apt-pkgs-action@v1.2.4
      with:
          packages: libsnappy-dev libc6-dev libc6
          version: 1.0
    - name: Check out repository
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Cache nuget
      id: cache-nuget
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}

    - name: Ethereum.Abi.Test
      run: dotnet test src/Nethermind/Ethereum.Abi.Test -c ${{ env.BUILD_CONFIG }}
    - name: Ethereum.Basic.Test
      run: dotnet test src/Nethermind/Ethereum.Basic.Test -c ${{ env.BUILD_CONFIG }}
    - name: Ethereum.Blockchain.Block.Test
      run: dotnet test src/Nethermind/Ethereum.Blockchain.Block.Test -c ${{ env.BUILD_CONFIG }}     
    - name: Ethereum.Difficulty.Test
      run: dotnet test src/Nethermind/Ethereum.Difficulty.Test -c ${{ env.BUILD_CONFIG }}
    - name: Ethereum.HexPrefix.Test
      run: dotnet test src/Nethermind/Ethereum.HexPrefix.Test -c ${{ env.BUILD_CONFIG }}
    - name: Ethereum.KeyAddress.Test
      run: dotnet test src/Nethermind/Ethereum.KeyAddress.Test -c ${{ env.BUILD_CONFIG }}
    - name: Ethereum.PoW.Test
      run: dotnet test src/Nethermind/Ethereum.PoW.Test -c ${{ env.BUILD_CONFIG }}
    - name: Ethereum.Rlp.Test
      run: dotnet test src/Nethermind/Ethereum.Rlp.Test -c ${{ env.BUILD_CONFIG }}
    - name: Ethereum.Transaction.Test
      run: dotnet test src/Nethermind/Ethereum.Transaction.Test -c ${{ env.BUILD_CONFIG }}
    - name: Ethereum.Transition.Test
      run: dotnet test src/Nethermind/Ethereum.Transition.Test -c ${{ env.BUILD_CONFIG }}
