name: '[PRE-RELEASE] Nethermind'

on: 
  workflow_dispatch:
    inputs:
      tag:
        description: 'Version tag'
        required: true

permissions:
  deployments: write
  packages: write
  contents: write

env:
  PACKAGE_DIR: pkg
  PUB_DIR: pub
  SCRIPTS_PATH: ${{ github.workspace }}/nethermind/scripts/deployment

jobs:
  build:
    name: Build Nethermind packages
    runs-on: ubuntu-latest
    outputs:
      BUILD_TIMESTAMP: ${{ steps.build-runner.outputs.BUILD_TIMESTAMP }}
      COMMIT_HASH: ${{ steps.build-runner.outputs.COMMIT_HASH }}
      PACKAGE_PREFIX: ${{ steps.archive.outputs.PACKAGE_PREFIX }}
    steps:
    - name: Check out Nethermind repository
      uses: actions/checkout@v3
      with:
        submodules: recursive
        path: nethermind
        ref: ${{ github.event.inputs.tag }}
    - name: Check out Nethermind Launcher repository
      uses: actions/checkout@v3
      with:
        repository: NethermindEth/nethermind.launcher
        path: launcher
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 14
    - name: Install npm packages
      run: npm i pkg @vercel/ncc -g
    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Build Nethermind.Runner
      id: build-runner
      run: |
        build_timestamp=$(date '+%s')
        cd nethermind && commit_hash=$(git describe --always --exclude=* --abbrev=40) && cd ..
        echo "BUILD_TIMESTAMP=$build_timestamp" >> $GITHUB_OUTPUT
        echo "COMMIT_HASH=$commit_hash" >> $GITHUB_OUTPUT
        echo "COMMIT_HASH_SHORT=$(echo $commit_hash | awk '{print substr($0,0,8);}')" >> $GITHUB_OUTPUT
        $SCRIPTS_PATH/build-runner.sh ${{ github.event.inputs.tag }} $commit_hash $build_timestamp
    - name: Build Nethermind.Cli
      run: $SCRIPTS_PATH/build-cli.sh ${{ github.event.inputs.tag }} ${{ steps.build-runner.outputs.COMMIT_HASH }} ${{ steps.build-runner.outputs.BUILD_TIMESTAMP }}
    - name: Build Nethermind.Launcher
      run: $SCRIPTS_PATH/build-launcher.sh
    - name: Build Nethermind.Launcher for Linux arm64
      run: |
        cd nethermind
        docker buildx build --platform=linux/arm64 -t tmp-launcher -f Dockerfile.launcher . --load
        docker run --platform=linux/arm64 -v $PWD:/opt/mount --rm tmp-launcher bash -c "cp /nethermind/Nethermind.Launcher /opt/mount/"
        mv Nethermind.Launcher $GITHUB_WORKSPACE/$PUB_DIR/linux-arm64/Nethermind.Launcher
    - name: Archive packages
      id: archive
      env:
        PACKAGE_PREFIX: nethermind-${{ github.event.inputs.tag }}-${{ steps.build-runner.outputs.COMMIT_HASH_SHORT }}
      run: |
        echo "PACKAGE_PREFIX=$PACKAGE_PREFIX" >> $GITHUB_OUTPUT
        $SCRIPTS_PATH/archive-packages.sh
    - name: Cache packages
      uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/${{ env.PACKAGE_DIR }}/
          ${{ env.SCRIPTS_PATH }}/
        key: packages-${{ steps.build-runner.outputs.COMMIT_HASH }}

  trigger-publish:
    name: Trigger publish event to different sources
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: Releases
      url: https://github.com/NethermindEth/nethermind/releases/tag/${{ github.event.inputs.tag }}
    steps:
    - run: echo "Just a middle-man job"

  publish-github:
    name: Publish packages to GitHub Releases
    runs-on: ubuntu-latest
    needs: trigger-publish
    steps:
    - name: Restore packages from cache
      uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/${{ env.PACKAGE_DIR }}/
          ${{ env.SCRIPTS_PATH }}/
        key: packages-${{ needs.build.outputs.COMMIT_HASH }}
    - name: Publish
      env:
        GIT_COMMIT: ${{ needs.build.outputs.COMMIT_HASH }}
        GIT_TAG: ${{ github.event.inputs.tag }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PACKAGE_PREFIX: ${{ needs.build.outputs.PACKAGE_PREFIX }}
      run: $SCRIPTS_PATH/publish-github.sh

  publish-dockers:
    name: Publish Docker images to Docker Hub
    runs-on: ubuntu-latest
    needs: trigger-publish
    env:
      DOCKER_IMAGE: nethermind/nethermind
    steps:
    - name: Check out Nethermind repository
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.tag }}
        fetch-depth: 0
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Log in to Docker Hub
      if: success()
      run: |
        echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin
    - name: Build and push image to Docker registry (major) / trigger DAppNode build
      if: ${{ !contains(github.event.inputs.tag, '-') }}
      run: |
        docker buildx build --platform=linux/amd64,linux/arm64 -t "${{ env.DOCKER_IMAGE }}:latest" -t "${{ env.DOCKER_IMAGE }}:${{ github.event.inputs.tag }}" -f Dockerfile --build-arg COMMIT_HASH=${{ needs.build.outputs.COMMIT_HASH }} --build-arg BUILD_TIMESTAMP=${{ needs.build.outputs.BUILD_TIMESTAMP }} . --push
        curl -s -X POST -u "${{ secrets.REPOSITORY_DISPATCH_TOKEN }}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" -d '{"event_type":"dappnode","client_payload":{"tag":"${{ github.event.inputs.tag }}"}}' https://api.github.com/repos/$GITHUB_REPOSITORY/dispatches
    - name: Build and push image to Docker registry  (patch)
      if: ${{ contains(github.event.inputs.tag, '-') }}
      run: |
        docker buildx build --platform=linux/amd64,linux/arm64 -t "${{ env.DOCKER_IMAGE }}:${{ github.event.inputs.tag }}" -f Dockerfile --build-arg COMMIT_HASH=${{ needs.build.outputs.COMMIT_HASH }} --build-arg BUILD_TIMESTAMP=${{ needs.build.outputs.BUILD_TIMESTAMP }} . --push
    - name: Clear Docker cache
      if: always()
      run: |
        rm -f $HOME/.docker/config.json

