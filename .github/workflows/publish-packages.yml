name: Publish packages

on:
  push:
    branches: [test/ppa-1.34.0]

jobs:
  publish-ppa:
    name: Publish on PPA
    runs-on: ubuntu-latest
    #if: ${{ !github.event.release.prerelease }}
    steps:
      - name: Check out Nethermind repository
        uses: actions/checkout@v4
        with:
          ref: v1.34.0
      - name: Set up GPG
        env:
          GPG_PASSPHRASE: ${{ secrets.PPA_GPG_PASSPHRASE }}
          GPG_SECRET_KEY: ${{ secrets.PPA_GPG_SECRET_KEY }}
        run: |
          echo $GPG_SECRET_KEY > SECRET_KEY
          echo $GPG_PASSPHRASE > $GITHUB_WORKSPACE/PASSPHRASE
          echo "Import GPG key"
          base64 --decode -i SECRET_KEY | gpg --import --no-tty --batch --yes
          echo "Import GPG owner trust"
          echo ${{ secrets.GPG_OWNERTRUST }} | base64 --decode | gpg --import-ownertrust
      - name: Install PPA dependencies
        run: sudo apt-get update && sudo apt-get install build-essential debhelper devscripts -y
      - name: Submit package
        env:
          PPA_GPG_KEYID: ${{ secrets.PPA_GPG_KEYID }}
        working-directory: scripts/build/ppa
        run: |
          version=1.34.0
          json=$(curl -sL https://api.github.com/repos/NethermindEth/nethermind/releases/249928875/assets)
          arm64_url=$(echo "$json" | jq -r '.[].browser_download_url | select(contains("linux-arm64"))')
          arm64_hash=$(curl -sL $arm64_url | sha256sum | awk '{print $1}')
          x64_url=$(echo "$json" | jq -r '.[].browser_download_url | select(contains("linux-x64"))')
          x64_hash=$(curl -sL $x64_url | sha256sum | awk '{print $1}')
          awk -i inplace -v n=1 '/url/ { if (++count == n) sub(/url.*/, "url='$arm64_url'"); } 1' debian/postinst
          awk -i inplace -v n=2 '/url/ { if (++count == n) sub(/url.*/, "url='$x64_url'"); } 1' debian/postinst
          awk -i inplace -v n=1 '/hash/ { if (++count == n) sub(/hash.*/, "hash='$arm64_hash'"); } 1' debian/postinst
          awk -i inplace -v n=2 '/hash/ { if (++count == n) sub(/hash.*/, "hash='$x64_hash'"); } 1' debian/postinst

          changelog="nethermind ($version) jammy; urgency=high\n"
          changelog+="  * Nethermind v$version\n"
          changelog+=" -- Nethermind <devops@nethermind.io>  $(date -R)"
          echo -e "$changelog" > debian/changelog

          debuild -S -uc -us
          cd ..
          debsign -p "gpg --batch --yes --no-tty --pinentry-mode loopback --passphrase-file $GITHUB_WORKSPACE/PASSPHRASE" \
            -S -k$PPA_GPG_KEYID nethermind_${version}_source.changes
          dput -f ppa:nethermindeth/nethermind nethermind_${version}_source.changes

  copy-ppa:
    name: Copy PPA package
    runs-on: ubuntu-latest
    needs: publish-ppa
    steps:
      - name: Wait for PPA package to be published
        #if: github.run_attempt == 1
        run: sleep 2h
      - name: Install PPA dependencies
        run: |
          sudo apt-get update
          sudo apt-get install debhelper devscripts ubuntu-dev-tools -y
      - name: Set up Python
        uses: actions/setup-python@v5
      - name: Install launchpadlib
        run: pip install launchpadlib --upgrade
      - name: Copy to other series
        env:
          LP_CREDENTIALS_FILE: /tmp/lp_credentials
        run: |
          echo ${{ secrets.PPA_COPY_TOKEN }} | base64 --decode > /tmp/lp_credentials
          git clone https://git.launchpad.net/ubuntu-archive-tools
          cd ubuntu-archive-tools
          for release in "noble"; do
            python3 copy-package -y -b -p nethermindeth --ppa-name=nethermind -s jammy --to-suite=$release nethermind
          done
          rm -f /tmp/lp_credentials



  
