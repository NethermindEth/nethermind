name: Publish NuGet packages

on:
  release:
    types: [published]
  
jobs:
  latest-release:
    name: Get latest release
    runs-on: ubuntu-latest
    outputs:
      updated: ${{ steps.release.outputs.updated }}
      url: ${{ steps.release.outputs.url }}
      version: ${{ steps.release.outputs.version }}
    steps:
      - name: Get release metadata
        id: release
        run: |
          releases_url=https://api.github.com/repos/nethermindeth/nethermind/releases
          read tag_name prerelease url < <(echo $(curl -s $releases_url/latest | jq -r '.tag_name, .prerelease, (.assets[].browser_download_url | select(contains("ref-assemblies")))'))
          read tag_name0 prerelease0 < <(echo $(curl -s $releases_url | jq -r '.[0] | .tag_name, .prerelease'))
          updated=$([ $tag_name = $tag_name0 ] && [ $prerelease = 'false' ] && echo "true" || echo "false")
          echo "updated=$updated" >> $GITHUB_OUTPUT
          echo "url=$url" >> $GITHUB_OUTPUT
          echo "version=$tag_name" >> $GITHUB_OUTPUT

  publish-ref-assemblies:
    name: Publish Nethermind.ReferenceAssemblies
    runs-on: ubuntu-latest
    needs: latest-release
    if: needs.latest-release.outputs.updated == 'true'
    steps:
      - name: Check out Nethermind repository
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.latest-release.outputs.version }}
      - name: Download Nethermind reference assemblies
        run: |
          curl -sL ${{ needs.latest-release.outputs.url }} -o refasm.zip
          unzip refasm.zip -d src/Nethermind/Nethermind.ReferenceAssemblies/ref
      - name: Submit package
        working-directory: src/Nethermind/Nethermind.ReferenceAssemblies
        run: | 
          dotnet pack -c release
          dotnet nuget push bin/release/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
