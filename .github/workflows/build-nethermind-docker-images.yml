name: '[BUILD] Docker images and publish to Docker Hub'

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag for the nethermind/nethermind docker image'
        required: false
        default: ''

jobs:
  build-dockers:
    if: github.repository_owner == 'NethermindEth'
    runs-on: ubuntu-latest
    steps:
      - name: Checking out repository
        uses: actions/checkout@v2
      - name: Unshallow fetching
        run: git fetch --unshallow
      - name: Settings
        id: settings
        run: |
          echo ::set-output name=TAG::${{ github.event.inputs.tag }}
          echo ::set-output name=TAG_FROM_REPO::$(git describe --tags --always | cut -d- -f1)
          echo ::set-output name=docker_username::${{ secrets.DOCKER_USERNAME }}
          echo ::set-output name=docker_image::nethermind/nethermind
      - name: Setting up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Setting up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Logging to Docker Hub
        if: success()
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${{ steps.settings.outputs.docker_username }}" --password-stdin
      - name: Building & Pushing image to docker registry (major) / trigger DAppNode Build
        if: steps.settings.outputs.TAG == steps.settings.outputs.TAG_FROM_REPO
        run: |
          docker buildx build --platform=linux/amd64,linux/arm64 -t "${{ steps.settings.outputs.docker_image }}:latest" -t "${{ steps.settings.outputs.docker_image }}:${{ steps.settings.outputs.TAG }}" -f Dockerfile --build-arg GIT_COMMIT=$(git log -1 --format=%h) . --push
          curl -v -X POST -u "${{ secrets.PAT_GITHUB }}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" --data '{"event_type":"dappnode", "client_payload": { "tag":"${{ steps.settings.outputs.TAG }}"}}' https://api.github.com/repos/nethermindeth/nethermind/dispatches
      - name: Building & Pushing image to docker registry  (patch)
        if: steps.settings.outputs.TAG != steps.settings.outputs.TAG_FROM_REPO
        run: |
          docker buildx build --platform=linux/amd64,linux/arm64 -t "${{ steps.settings.outputs.docker_image }}:${{ steps.settings.outputs.TAG }}" -f Dockerfile --build-arg GIT_COMMIT=$(git log -1 --format=%h) . --push
      - name: Clearing
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json
