name: '[BUILD] Nethermind packages'

on: 
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true

jobs:
  build-nethermind:
    name: Build Nethermind packages
    runs-on: ubuntu-latest
    env: 
      RELEASE_PATH: ${{ github.workspace }}
      LINUX_X64_PKG: nethermind-linux-x64
      LINUX_ARM64_PKG: nethermind-linux-arm64
      WIN_X64_PKG: nethermind-win-x64
      OSX_X64_PKG: nethermind-osx-x64
      OSX_ARM64_PKG: nethermind-osx-arm64
    steps:
    - name: Check out Nethermind repository
      uses: actions/checkout@v3
      with:
        submodules: recursive
        path: nethermind
    - name: Check out Nethermind Launcher repository
      uses: actions/checkout@v3
      with:
        repository: NethermindEth/nethermind.launcher
        path: launcher
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 14
    - name: Install npm packages
      run: npm i pkg @vercel/ncc -g
    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Build Nethermind.Runner
      id: build-runner
      run: |
        cd nethermind/
        build_timestamp=$(date '+%s')
        commit_hash=$(git describe --always --exclude=* --abbrev=40)
        echo "BUILD_TIMESTAMP=$build_timestamp" >> $GITHUB_OUTPUT
        echo "COMMIT_HASH=$commit_hash" >> $GITHUB_OUTPUT
        ./scripts/deployment/build-runner.sh ${{ github.event.inputs.version }} $commit_hash $build_timestamp
    - name: Build Nethermind.Cli
      run: ./nethermind/scripts/deployment/build-cli.sh
    - name: Build Nethermind.Launcher
      run: ./nethermind/scripts/deployment/build-launcher.sh
    - name: Build Nethermind.Launcher for Linux arm64
      run: |
        cd nethermind/
        docker buildx build --platform=linux/arm64 -t tmp-launcher -f Dockerfile.launcher . --load
        docker run --platform=linux/arm64 -v $PWD:/opt/mount --rm tmp-launcher bash -c "cp /nethermind/Nethermind.Launcher /opt/mount/"
        mv Nethermind.Launcher ${{ env.RELEASE_PATH }}/linux-arm64/Nethermind.Launcher
    - name: Archive packages
      run: ./nethermind/scripts/deployment/archive-packages.sh ${{ github.event.inputs.version }} ${{ steps.build-runner.outputs.COMMIT_HASH }} ${{ steps.build-runner.outputs.BUILD_TIMESTAMP}}
    - uses: actions/upload-artifact@v3
      name: Upload Nethermind Linux x64 package
      with:
        name: ${{ env.LINUX_X64_PKG }}-package
        path: ${{ env.RELEASE_PATH }}/linux-x64/${{ env.LINUX_X64_PKG }}-*
    - uses: actions/upload-artifact@v3
      name: Upload Nethermind Linux arm64 package
      with:
        name: ${{ env.LINUX_ARM64_PKG }}-package
        path: ${{ env.RELEASE_PATH }}/linux-arm64/${{ env.LINUX_ARM64_PKG }}-*
    - uses: actions/upload-artifact@v3
      name: Upload Nethermind Windows x64 package
      with:
        name: ${{ env.WIN_X64_PKG }}-package
        path: ${{ env.RELEASE_PATH }}/win-x64/${{ env.WIN_X64_PKG }}-*
    - uses: actions/upload-artifact@v3
      name: Upload Nethermind macOS x64 package
      with:
        name: ${{ env.OSX_X64_PKG }}-package
        path: ${{ env.RELEASE_PATH }}/osx-x64/${{ env.OSX_X64_PKG }}-*
    - uses: actions/upload-artifact@v3
      name: Upload Nethermind macOS arm64 package
      with:
        name: ${{ env.OSX_ARM64_PKG }}-package
        path: ${{ env.RELEASE_PATH }}/osx-arm64/${{ env.OSX_ARM64_PKG }}-*
