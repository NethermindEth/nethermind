<?xml version="1.0" encoding="utf-8"?>

<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true" throwExceptions="false">

  <extensions>
    <add assembly="NLog.Targets.Seq"/>
  </extensions>

  <targets>
    <target xsi:type="AsyncWrapper"
            name="file-async"
            queueLimit="10000"
            timeToSleepBetweenBatches="0"
            batchSize="200"
            overflowAction="Discard">
      <target name="file" xsi:type="File"
              fileName="log.txt"
              archiveAboveSize="32000000"
              maxArchiveFiles="10"
              layout="${longdate}|${level:uppercase=true}|${threadid}|${message} ${exception:format=toString}" />
              <!--layout="${longdate}|${level:uppercase=true}|${threadid}|${logger}|${message} ${exception:format=toString}" />-->
    </target>

    <target xsi:type="AutoFlushWrapper" name="auto-colored-console-async">
      <target xsi:type="AsyncWrapper"
              name="colored-console-async"
              queueLimit="10000"
              timeToSleepBetweenBatches="0"
              batchSize="200"
              overflowAction="Discard">
      
        <target xsi:type="ColoredConsole"
                name="colored-console"
                useDefaultRowHighlightingRules="False"
                layout="${longdate}|${message} ${exception:format=toString}">
                <!-- layout="${longdate}|${threadid}|${message} ${exception:format=toString}"> -->
          <highlight-row backgroundColor="NoChange" condition="level == LogLevel.Fatal" foregroundColor="Red" />
          <highlight-row backgroundColor="NoChange" condition="level == LogLevel.Error" foregroundColor="Red" />
          <highlight-row backgroundColor="NoChange" condition="level == LogLevel.Warn" foregroundColor="Yellow" />
          <highlight-row backgroundColor="NoChange" condition="level == LogLevel.Info" foregroundColor="Cyan" />
          <highlight-row backgroundColor="NoChange" condition="level == LogLevel.Debug" foregroundColor="Gray" />
          <highlight-row backgroundColor="NoChange" condition="level == LogLevel.Trace" foregroundColor="DarkGray" />
        </target>
      </target>
    </target>
    <target xsi:type="BufferingWrapper" name="seq" bufferSize="1000" flushTimeout="2000">
      <target xsi:type="Seq" serverUrl="http://localhost:5341" apiKey="">
        <property name="ThreadId" value="${threadid}" as="number" />
        <property name="MachineName" value="${machinename}" />
        <property name="Logger" value="${logger}" />
        <property name="Exception" value="${exception}" />
        <property name="Enode" value="${gdc:item=enode}" />
        <property name="Chain" value="${gdc:item=chain}" />
        <property name="ChainID" value="${gdc:item=chainId}" />
        <property name="Engine" value="${gdc:item=engine}" />
        <property name="NodeName" value="${gdc:item=nodeName}" />
      </target>
    </target>
  </targets>

  <rules>
    <!--<logger name="Blockchain.BlockchainProcessor" minlevel="Debug" writeTo="file-async"/>
    <logger name="Blockchain.BlockchainProcessor" minlevel="Debug" writeTo="auto-colored-console-async" final="true"/>
    <logger name="Blockchain.BlockchainProcessor" final="true"/>-->

    <logger name="JsonWebAPI*" minlevel="Error" writeTo="file-async"/>
    <logger name="JsonWebAPI*" minlevel="Error" writeTo="auto-colored-console-async" final="true"/>
    <logger name="JsonWebAPI*" final="true"/>

    <!--<logger name="Network.PeerManager" minlevel="Debug" writeTo="file-async"/>
    <logger name="Network.PeerManager" minlevel="Debug" writeTo="auto-colored-console-async"/>
    <logger name="Network.PeerManager" final="true"/>-->

    <!--<logger name="Network*" minlevel="Trace" writeTo="file-async"/>
    <logger name="Network*" minlevel="Debug" writeTo="auto-colored-console-async"/>
    <logger name="Network*" final="true"/>-->
    
    <!-- <logger name="Blockchain.Synchronization.NodeDataDownloader" minlevel="Debug" writeTo="file-async"/> -->
    <!-- <logger name="Blockchain.Synchronization.NodeDataDownloader" minlevel="Debug" writeTo="auto-colored-console-async"/> -->
    <!-- <logger name="Blockchain.Synchronization.NodeDataDownloader" final="true"/> -->
    <!-- -->
    <!-- <logger name="Blockchain.Synchronization.Synchronizer" minlevel="Debug" writeTo="file-async"/> -->
    <!-- <logger name="Blockchain.Synchronization.Synchronizer" minlevel="Debug" writeTo="auto-colored-console-async"/> -->
    <!-- ~1~ <logger name="Blockchain.Synchronization.Synchronizer" final="true"/> @1@ -->
    <!-- -->
    <!-- <logger name="Network.*" minlevel="Trace" writeTo="file-async"/> -->
    <!-- <logger name="Network.*" minlevel="Trace" writeTo="auto-colored-console-async"/> -->
    <!-- <logger name="Network.*" final="true"/> -->
    <!-- -->
    <!-- <logger name="Blockchain.*" minlevel="Trace" writeTo="file-async"/> -->
    <!-- <logger name="Blockchain.*" minlevel="Trace" writeTo="auto-colored-console-async"/> -->
    <!-- <logger name="Blockchain.*" final="true"/> -->

    <!-- <logger name="Network.Discovery.*" minlevel="Debug" writeTo="file-async"/> -->
    <!-- <logger name="Network.Discovery.*" minlevel="Debug" writeTo="auto-colored-console-async"/> -->
    <!-- <logger name="Network.Discovery.*" final="true"/> -->

    <logger name="*" minlevel="Off" writeTo="seq" />
    <logger name="*" minlevel="Info" writeTo="file-async"/>
    <logger name="*" minlevel="Info" writeTo="auto-colored-console-async"/>
  </rules>
</nlog>